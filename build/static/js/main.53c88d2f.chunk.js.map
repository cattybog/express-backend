{"version":3,"sources":["componentes/Navegacion.js","componentes/OlvidoPassword.js","componentes/Ubicaciones.js","owlogo.png","bookish.png","componentes/AcercaDe.js","CaradeGato.PNG","componentes/Contacto.js","componentes/Equipo.js","componentes/Producto.js","componentes/Horario.js","componentes/Notas.js","componentes/Tareas.js","ReticulaSistemasEspTICs.png","ReticulaSistemasEspTecnologiasWeb.png","ReticulaElectronicaEspMecatronica.png","ReticulaElectronicaEspSistemasEnergeticos.png","ReticulaElectricaEspSistemasElectricos.png","ReticulaGestionEmpresarial.png","ReticulaQuimicaEspGestionAmbiental.png","ReticulaMecanicaEspDisenoMecanico.png","ReticulaMecanicaEspTermica.png","componentes/Reticula.js","componentes/Inicio.js","componentes/Login.js","componentes/Registro.js","componentes/Pie.js","componentes/Dashboard.js","bookishDark.png","componentes/AppBar.js","componentes/AppBarLogeado.js","componentes/Precios.js","componentes/PoliticaPrivacidad.js","componentes/ToS.js","componentes/404.js","App.js","index.js"],"names":["Navegacion","React","useState","value","setValue","useEffect","window","location","pathname","BottomNavigation","showLabels","BottomNavigationAction","label","icon","href","OlvidoPassword","Container","maxWidth","Stack","direction","justifyContent","alignItems","spacing","TextField","id","variant","fullWidth","Button","Ubicaciones","align","title","width","height","src","frameBorder","scrolling","marginHeight","marginWidth","AcercaDe","EstiloLogo","mision","fontSize","style","className","alt","logo","position","logoKitten","caraGato","Equipo","Producto","producto","alignText","TabPanel","props","children","index","other","role","hidden","Box","sx","p","Typography","component","a11yProps","Horario","Axios","defaults","withCredentials","headers","accionUsuario","setAccionUsuario","materias","setMaterias","historialPartido","setHistorialPartido","horarioPartido","setHorarioPartido","dialogoAgregarAbierto","setDialogoAgregarAbierto","dialogoEditarAbierto","setDialogoEditarAbierto","dialogoEliminarAbierto","setDialogoEliminarAbierto","clases","setClases","idClase","setIdClase","claveMateria","setClaveMateria","grupo","setGrupo","docente","setDocente","aula","setAula","horaInicio","setHoraInicio","horaTermino","setHoraTermino","lunes","setLunes","martes","setMartes","miercoles","setMiercoles","jueves","setJueves","viernes","setViernes","claseActiva","setClaseActiva","errorHorario","setErrorHorario","condicion","get","then","res","data","catch","err","console","log","partirReticula","partirHorario","getCarreraMateria","clave_materia","result","forEach","materia","carrera_materia","getNombreMateria","nombre_materia","reticula","aprobadasReticula","encursoReticula","porcursarReticula","materiaReticula","estado","push","horario","lunesHorario","martesHorario","miercolesHorario","juevesHorario","viernesHorario","clase","handleEditarAbierto","handleEditarCerrado","handleEliminarCerrado","handleAgregarCerrado","limpiar","Alert","severity","AlertTitle","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","length","undefined","map","Card","minWidth","CardActionArea","onClick","id_clase","hora_inicio","hora_termino","CardContent","color","gutterBottom","mb","toString","py","Grid","container","item","display","borderRadius","flexDirection","Dialog","open","onClose","DialogTitle","DialogContent","m","FormControl","InputLabel","Select","e","target","MenuItem","id_curso","DialogContentText","margin","size","type","required","InputProps","startAdornment","InputAdornment","mr","my","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","FormGroup","FormControlLabel","control","Checkbox","defaultChecked","DialogActions","disabled","post","parseInt","checked","delete","autoFocus","Notas","notas","setNotas","titulo","setTitulo","contenido","setContenido","idNota","setIdNota","notaActiva","setNotaActiva","handleAgregarAbierto","Fragment","CssBaseline","xs","sm","md","backgroundColor","boxShadow","nota","id_nota","flexGrow","multiline","rows","fullScreen","Tareas","ListaTabs","tareas","setTareas","tabValue","setTabValue","idTarea","setIdTarea","descripcion","setDescripcion","setEstado","tareaActiva","setTareaActiva","estaAbiertoSnackbarComenzada","setEstaAbiertoSnackbarComenzada","estaAbiertoSnackbarFinalizada","setEstaAbiertoSnackbarFinalizada","i","j","encontrarTareas","tareasMateria","tarea","id_tarea","Divider","light","tiempo_creacion","tiempo_inicio","tiempo_finalizacion","ml","startIcon","endIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Reticula","idCurso","setIdCurso","estadoMateria","setEstadoMateria","semestreMateria","setSemestreMateria","calificacionMateria","setCalificacionMateria","periodoMateria","setPeriodo","anoMateria","setAnoMateria","presionoAprobada","setPresionoAprobada","enCursoReticula","porCursarReticula","handleEliminarAbierto","getCreditos","materiasAprobadas","suma","ClaveMateria","creditos","creditos_materia","getCreditosMateria","textColor","border","transform","periodo_cursada","semestre_cursada","float","marginTop","marginLeft","marginRight","padding","calificacion","columnGap","rowGap","Accordion","AccordionSummary","expandIcon","AccordionDetails","ReticulaSistemasEspTICs","ReticulaSistemasEspTecnologiasWeb","ReticulaElectronicaEspMecatronica","ReticulaElectronicaEspSistemasEnergeticos","ReticulaElectricaEspSistemasElectricos","ReticulaGestionEmpresarial","ReticulaQuimicaEspGestionAmbiental","ReticulaMecanicaEspTermica","ReticulaMecanicaEspDisenoMecanico","textAlign","getPromedio","eliminarMateria","srcSet","image","cols","itemData","img","author","StandardImageList","ImageList","rowHeight","ImageListItem","loading","Inicio","Carousel","Item","Caption","Login","usuario","setUsuario","password","setPassword","esValido","backgroundImage","backgroundRepeat","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","mx","Avatar","bgcolor","noValidate","onSubmit","login","mt","name","estatus","Link","Registro","nombre","setNombre","apellido","setApellido","setEstatus","estatusCheckbox","setEstatusCheckbox","esInvalidoNombre","esInvalidoApellido","esInvalidoUsuario","esInvalidoPassword","preventDefault","FormData","currentTarget","username","firstName","lastName","response","status","error","autoComplete","helperText","Copyright","Date","getFullYear","footers","description","rutasDiccionario","Contacto","Precios","Pie","borderTop","theme","divider","footer","underline","Dashboard","MenuAppBar","GlobalStyles","styles","ul","listStyle","AppBar","Toolbar","flexWrap","dark","logoDark","MenuAppBarLogeado","anchorEl","setAnchorEl","IconButton","Menu","keepMounted","transformOrigin","Boolean","handleLogout","logout","tiers","price","buttonText","buttonVariant","subheader","disableGutters","pt","pb","tier","CardHeader","titleTypographyProps","action","subheaderTypographyProps","line","CardActions","Pricing","PoliticaPrivacidad","ToS","Componente404","ColorModeContext","createContext","toggleColorMode","App","useTheme","colorMode","useContext","setUsername","authenticated","setAuthenticated","darkState","setDarkState","localStorage","getItem","setItemLS","setItem","exact","path","render","ToggleColorMode","setMode","useMemo","prevMode","createTheme","Provider","ThemeProvider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53c88d2f.chunk.js","sourcesContent":["//<Resumen>\r\n//Clase Navegacion la cual nos permite navegar entre las diferentes categorias\r\n//Contiene una funcion el cual hace el llamado a las clases que son de las de categorias de la aplicación\r\n//</Resumen>\r\n//<para> En esta clase se llama a: inicio, notas, horario, tareas y reticula\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creacion> 11 de octubre de 2021 </Fecha de creacion>\r\n\r\n//**********************Imports************************************\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport NotesIcon from \"@mui/icons-material/Notes\";\r\nimport ScheduleIcon from \"@mui/icons-material/Schedule\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport FeedIcon from \"@mui/icons-material/Feed\";\r\n\r\nimport React, { useEffect } from \"react\";\r\n//*****************************************************************\r\n\r\n//Funcion principal que determina la categoria que el usuario selecciono\r\nexport default function Navegacion() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  //Comprueba mediante un switch el bóton que se seleecciono\r\n  //para saber la clase a la que se dirigira\r\n  useEffect(() => {\r\n    switch (window.location.pathname) {\r\n      case \"/inicio\":\r\n        setValue(0);\r\n        break;\r\n      case \"/notas\":\r\n        setValue(1);\r\n        break;\r\n      case \"/horario\":\r\n        setValue(2);\r\n        break;\r\n      case \"/tareas\":\r\n        setValue(3);\r\n        break;\r\n      case \"/reticula\":\r\n        setValue(4);\r\n        break;\r\n      default:\r\n        setValue(null);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    //CREACIÓN DEL MENU SUPERIOR\r\n    <BottomNavigation showLabels value={value}>\r\n      {/*Creación del botón de inicio*/}\r\n      <BottomNavigationAction\r\n        label=\"Inicio\"\r\n        icon={<HomeIcon />}\r\n        href=\"/inicio\"\r\n      />\r\n      {/*Creación del botón de notas*/}\r\n      <BottomNavigationAction\r\n        label=\"Notas\"\r\n        icon={<NotesIcon />}\r\n        href=\"/notas\"\r\n      />\r\n      {/*Creación del botón de horario*/}\r\n      <BottomNavigationAction\r\n        label=\"Horario\"\r\n        icon={<ScheduleIcon />}\r\n        href=\"/horario\"\r\n      />\r\n      {/*Creación del botón de tareas*/}\r\n      <BottomNavigationAction\r\n        label=\"Tareas\"\r\n        icon={<CheckIcon />}\r\n        href=\"/tareas\"\r\n      />\r\n      {/*Creación del botón de tareas*/}\r\n      <BottomNavigationAction\r\n        label=\"Retícula\"\r\n        icon={<FeedIcon />}\r\n        href=\"/reticula\"\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n","//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Stack from \"@mui/material/Stack\";\r\n\r\n//Funcion por default para ejecutar al entrar en la seccion\r\nexport default function OlvidoPassword() {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <br />\r\n      <h5>Escribe aquí tu correo electrónico:</h5>\r\n    \r\n      {/*Formato para el formulario de olviadr contraseña */}\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"Correo electrónico\"\r\n          variant=\"standard\"\r\n          fullWidth={true}\r\n        />\r\n        <Button variant=\"contained\">Enviar</Button>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Ubicaciones que contiene un mapa mostrando mediante google maps de donde se\r\n//encuentran las instalaciones de la empresa Omegaware.\r\n//</Resumen>\r\n//<Para> En esta clase se puede visualizar la ubicación de donde se encuentran nuestras oficinas\r\n//fisicas mediante la ubicación de google maps.\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 11 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\n\r\n//Función principal que nos muestra un mapa en google maps\r\n//de donde se encuentran las oficinas fisicas de Omegaware.\r\nexport default function Ubicaciones() {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <br />\r\n      <h3 align=\"center\">Nuestras ubicaciones</h3>\r\n      <div>\r\n        <div>\r\n          <iframe //formato del contenido\r\n            title={\"Ubicaciones Tec\"}\r\n            width=\"600\"\r\n            height=\"500\"\r\n            id=\"gmap_canvas\"\r\n            src=\"https://maps.google.com/maps?q=Instituto%20Tecnologia%20de%20la%20Laguna&t=&z=15&ie=UTF8&iwloc=&output=embed\"\r\n            frameBorder=\"0\"\r\n            scrolling=\"no\"\r\n            marginHeight=\"0\"\r\n            marginWidth=\"0\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/owlogo.41ce35a9.png\";","export default __webpack_public_path__ + \"static/media/bookish.00724c79.png\";","//<Resumen>\r\n//Clase AcercaDe en la cual se muestra la información acerca de la empresa\r\n//Contiene una sola función en lo que se realiza lo mencionado\r\n//</Resumen>\r\n//<Para> En esta clase se encuentra información de la empresa y dando a conocer\r\n//el proyecto llamado kittenbook\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 12 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport logo from \"../owlogo.png\";\r\nimport logoKitten from \"../bookish.png\";\r\nimport \"./image.css\";\r\n\r\n//función principal para mostrar la información acerca de la empresa OmegaWare\r\nexport default function AcercaDe() {\r\n  const EstiloLogo = {};\r\n  const mision = { fontSize: \"1.2rem\" }; //formato de estilo para la misión de la empresa\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div>\r\n        <br />\r\n        <h3 align=\"center\">Acerca de OmegaWare</h3>\r\n\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato para el logo de la empresa\r\n              alt={\"Logo de la empresa.\"}\r\n              src={logo}\r\n              width=\"25%\"\r\n              position=\"center\"\r\n            />\r\n          </p>\r\n          <p style={mision}>\r\n            OmegaWare es una empresa dedicada a la creación de programas\r\n            (software) que actualmente esta establecida en la ciudad de Torreón,\r\n            Coahuila.\r\n            <br />\r\n            <br />\r\n            Nuestra mision es brindar una solución estable y eficiente a\r\n            nuestros clientes, que sea segura, cómoda y fácil de usar para\r\n            mejorar el rendimiento de su empresa y el de sus empleados.\r\n            <br />\r\n            <br />\r\n            La empresa comienza lanzando su app kittenbook la cual se enfoca en\r\n            mejorar la organización de los estudiantes mediante la\r\n            categorización de sus recursos más comunes: horario, retícula,\r\n            notas, tareas, y créditos.\r\n            <br />\r\n          </p>\r\n          <br />\r\n        </div>\r\n        <br />\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato para el logo del proyecto\r\n              alt={\"Un gato.\"}\r\n              src={logoKitten}\r\n              width=\"60%\"\r\n            />\r\n          </p>\r\n          <p style={mision}>\r\n            Nuestra primera app y con la que se pretende crear un mercado de\r\n            usuarios universitarios, cuenta con modalidades gratis y paga.\r\n            <br />\r\n            <br />\r\n          </p>\r\n          <h2 align=\"center\">¡Tu vida estudiantil al alcance de tu mano!</h2>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/CaradeGato.27f740c6.PNG\";","//<Resumen>\r\n//Clase Contacto que sirve para vias de contacto hacia nosotros, ya sea que requiera contactarse a\r\n//nosotros por ayuda con la aplicación, proponer mejoras, futuros proyectos o cualquier clase de\r\n//incoveniente con nuestra aplicación.\r\n//</Resumen>\r\n//<Para> Proporcionamos números de teléfono y correos electrónicos para que pueda contactarse con la empresa Omegaware.\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 13 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport logo from \"../owlogo.png\";\r\nimport caraGato from \"../CaradeGato.PNG\";\r\nimport \"./image.css\";\r\n\r\n//Función principal que muestra información sobre como pueden contactarnos\r\n//proporcionando correos electrónicos y teléfonos de la empresa.\r\nexport default function AcercaDe() {\r\n  const EstiloLogo = {};\r\n  const mision = { fontSize: \"1.2rem\" }; //formato del contenido\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <br />\r\n      <div>\r\n        <h3 align=\"center\">Contacto</h3>\r\n        <br />\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato de imagen de un gato\r\n              alt={\"Un gato.\"}\r\n              src={caraGato}\r\n              width=\"40%\"\r\n              position=\"center\"\r\n            />\r\n          </p>\r\n          <p style={mision}>\r\n            <br />\r\n            En este espacio encontrará los correos electrónicos para cualquier\r\n            duda o sugerencia sobre la aplicación, también puede contactarnos si\r\n            necesita ayuda técnica y de proyectos.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h3>Contáctanos en los siguientes correo:</h3>\r\n            <br />\r\n            <ol>\r\n              <li>contacto.kittenbook@gmail.com</li>\r\n              <li>programacion.kittenbook@gmail.com</li>\r\n            </ol>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h3>Contáctanos en los siguientes teléfonos:</h3>\r\n            <br />\r\n            <ol>\r\n              <li>+(872) 1373963</li>\r\n              <li>+(871) 4839795</li>\r\n            </ol>\r\n          </p>\r\n          <br />\r\n        </div>\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato del logo de la empresa\r\n              alt={\"Logo de la empresa.\"}\r\n              src={logo}\r\n              width=\"20%\"\r\n            />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Equipo en la cual se muestra información del equipo de la empresa\r\n//Contiene una sola función en lo que se realiza lo mencionado\r\n//</Resumen>\r\n//<Para> En esta clase se encuentra información del equipo de la empresa Omegaware\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 13 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport logo from \"../owlogo.png\";\r\nimport \"./image.css\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n//Función principal para mostrar la información del equipo de la empresa,\r\n//se describe en forma general lo que realiza OmegaWare.\r\nexport default function Equipo() {\r\n  const EstiloLogo = {};\r\n  const equipo = { fontSize: \"1.2rem\" }; //formato para el contenido\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div>\r\n        <br />\r\n        <h3 align=\"center\">Equipo OmegaWare</h3>\r\n\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato del logo de la empresa\r\n              alt={\"Logo de la empresa.\"}\r\n              src={logo}\r\n              width=\"25%\"\r\n              position=\"center\"\r\n            />\r\n          </p>\r\n          <p style={equipo}>\r\n            Somos una empresa que busca la mejora de los estudiantes en la\r\n            educación. Es por eso que nos enfocamos en proporcionar distintas\r\n            herramientas para poder estructura y organizar mejor el tiempo del\r\n            usuario dentro del ámbito educativo.\r\n            <br />\r\n            <br />\r\n            Nuestro equipo de trabajo está operando de manera conjunta para\r\n            poder alcanzar los objetivos y todos estamos yendo hacia una misma\r\n            dirección, en base a la responsabilidad y el respeto.\r\n            <br />\r\n            <br />\r\n            Para mantenernos confiables, estamos trabajando de manera\r\n            trasparente y escuchando la opinión de ustedes. Estamos en mejoras\r\n            constantes para que así el usuario se sienta seguro y confiable de\r\n            pertenecer a nuestro equipo.\r\n            <br />\r\n          </p>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Producto en la cual se muestra información del proyecto de la empresa\r\n//Contiene una sola función en lo que se realiza lo mencionado\r\n//</Resumen>\r\n//<Para> En esta clase se encuentra información del proyecto kittenbook\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 14 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport logoKitten from \"../bookish.png\";\r\nimport \"./image.css\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n//función principal para mostrar la información del proyecto kittenbook\r\nexport default function Producto() {\r\n  const EstiloLogo = {};\r\n  const producto = { fontSize: \"1.2rem\", alignText: \"justify\" }; //formato para el contenido\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div>\r\n        <br />\r\n        <h3 align=\"center\">¿Qué es?</h3>\r\n\r\n        <div style={EstiloLogo}>\r\n          <p className=\"aligncenter\">\r\n            <img //formato para el logo del proyecto\r\n              alt={\"Un gato.\"}\r\n              src={logoKitten}\r\n              width=\"60%\"\r\n            />\r\n          </p>\r\n          <p style={producto}>\r\n            Kittenbook es un software orientado a mejorar la organización de la\r\n            vida estudiantil, es ideal para alumnos que se les dificulta\r\n            organizar sus tiempos y responsabilidades académicas.\r\n            <br />\r\n            <br />\r\n            En el mundo académico surge la necesidad de administrar información\r\n            de corto plazo, tales como tareas pendientes, proyectos en progreso,\r\n            compromisos, notas tomadas en clase, etc., así como también\r\n            información a largo plazo, tal como historial de asignaturas,\r\n            créditos a cumplir, aplicaciones a residencias profesionales, etc.\r\n            El lidiar de manera efectiva y organizada con la abundante\r\n            información que surja es nuestro objetivo.\r\n            <br />\r\n            <br />\r\n            Kittenbook resolverá la problemática de los estudiantes para\r\n            organizar sus actividades escolares, (apuntes, horarios, retícula,\r\n            etc), ya que esto les provoca que tengan problemas a la hora de\r\n            buscar estos documentos.\r\n            <br />\r\n          </p>\r\n          <br />\r\n        </div>\r\n        <br />\r\n        <div style={EstiloLogo}>\r\n          <p style={producto}>\r\n            <h5>Novedades que ofrecemos</h5>\r\n            <h6>Retícula</h6>\r\n            Visualiza el estado de tus materias de una manera más rápida y\r\n            fácil.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h6>Horario</h6>\r\n            Organiza tus día, creando tu propio horario de materias.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h6>Lista de Tareas</h6>\r\n            Crea tu propia lista de tareas y consulta su estado.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h6>Apuntes</h6>\r\n            ¿Necesitas guardar información importante? Aquí podrás crear notas y\r\n            organizarlas con etiquetas.\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <h6>Conteo de créditos</h6>\r\n            Visualiza los créditos que llevas realizando durante el semestre en\r\n            que te encuentres.\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </p>\r\n          <h2 align=\"center\">¡Tu vida estudiantil al alcance de tu mano!</h2>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Horario en la cual el usuario puede agregar las materias según el día de la semana\r\n//que le toque dicha clase, y además podrá incorporar información adicional de la materia.\r\n//</Resumen>\r\n//<Para> En esta clase se puede acomodar el horario de clases del usuario\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 20 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Axios from \"axios\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport RoomIcon from \"@mui/icons-material/Room\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\n\r\n//Funcion para crear TabPanels de las categorias del horario.\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div //Propiedades del panel\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Propiedades requeridas por el tabpanel\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n//Agregar propiedades de react a los tabpanel\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//Función principal que exporta la clase Horario\r\nexport default function Horario() {\r\n  Axios.defaults.withCredentials = true;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  //Declaración de los hooks (arrays) de diversos parámetros como las materias, grupo, docente, hora, etc.\r\n  const [accionUsuario, setAccionUsuario] = useState(false);\r\n  const [materias, setMaterias] = useState([]);\r\n  const [historialPartido, setHistorialPartido] = useState([]);\r\n  const [horarioPartido, setHorarioPartido] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n  const [dialogoAgregarAbierto, setDialogoAgregarAbierto] = useState(false);\r\n  const [dialogoEditarAbierto, setDialogoEditarAbierto] = useState(false);\r\n  const [dialogoEliminarAbierto, setDialogoEliminarAbierto] = useState(false);\r\n  const [clases, setClases] = useState([]);\r\n  const [idClase, setIdClase] = useState(0);\r\n  const [claveMateria, setClaveMateria] = useState(\"\");\r\n  const [grupo, setGrupo] = useState(\"\");\r\n  const [docente, setDocente] = useState(\"\");\r\n  const [aula, setAula] = useState(\"\");\r\n  const [horaInicio, setHoraInicio] = useState(12);\r\n  const [horaTermino, setHoraTermino] = useState(12);\r\n  const [lunes, setLunes] = useState(true);\r\n  const [martes, setMartes] = useState(true);\r\n  const [miercoles, setMiercoles] = useState(true);\r\n  const [jueves, setJueves] = useState(true);\r\n  const [viernes, setViernes] = useState(true);\r\n  const [claseActiva, setClaseActiva] = useState({});\r\n  const [errorHorario, setErrorHorario] = useState(false);\r\n  let condicion =\r\n    claveMateria === \"\" || grupo === \"\" || docente === \"\" || aula === \"\";\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://kittenbook.software:3005/api/materias\")\r\n      .then((res) => {\r\n        setMaterias(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Axios.get(\"https://kittenbook.software:3005/api/historial\")\r\n      .then((res) => {\r\n        setHistorialPartido(partirReticula(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Axios.get(\"https://kittenbook.software:3005/api/horario\")\r\n      .then((res) => {\r\n        setClases(res.data);\r\n        setHorarioPartido(partirHorario(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [accionUsuario]);\r\n\r\n  //Función para validar la carrera de la materia\r\n  const getCarreraMateria = (clave_materia) => {\r\n    let result;\r\n    materias.forEach((materia) => {\r\n      if (materia.clave_materia === clave_materia) {\r\n        result = materia.carrera_materia;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  //Función para validar el nombre de la materia\r\n  const getNombreMateria = (clave_materia) => {\r\n    let result;\r\n    materias.forEach((materia) => {\r\n      if (materia.clave_materia === clave_materia) {\r\n        result = materia.nombre_materia;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  //Función para asignar el estado de la materia (aprobada, en curso, por cursar y reprobada)\r\n  const partirReticula = (reticula) => {\r\n    let aprobadasReticula = [];\r\n    let encursoReticula = [];\r\n    let porcursarReticula = [];\r\n    reticula.forEach((materiaReticula) => {\r\n      if (materiaReticula.estado === \"Aprobada\") {\r\n        aprobadasReticula.push(materiaReticula);\r\n      } else if (materiaReticula.estado === \"En curso\") {\r\n        encursoReticula.push(materiaReticula);\r\n      } else if (materiaReticula.estado === \"Por cursar\") {\r\n        porcursarReticula.push(materiaReticula);\r\n      }\r\n    });\r\n    return [aprobadasReticula, encursoReticula, porcursarReticula];\r\n  };\r\n\r\n  //Función para verificar el horario de la materia entre los dias de la semana\r\n  const partirHorario = (horario) => {\r\n    let lunesHorario = [];\r\n    let martesHorario = [];\r\n    let miercolesHorario = [];\r\n    let juevesHorario = [];\r\n    let viernesHorario = [];\r\n    horario.forEach((clase) => {\r\n      if (clase.lunes === 1) {\r\n        lunesHorario.push(clase);\r\n      }\r\n      if (clase.martes === 1) {\r\n        martesHorario.push(clase);\r\n      }\r\n      if (clase.miercoles === 1) {\r\n        miercolesHorario.push(clase);\r\n      }\r\n      if (clase.jueves === 1) {\r\n        juevesHorario.push(clase);\r\n      }\r\n      if (clase.viernes === 1) {\r\n        viernesHorario.push(clase);\r\n      }\r\n    });\r\n    return [\r\n      lunesHorario,\r\n      martesHorario,\r\n      miercolesHorario,\r\n      juevesHorario,\r\n      viernesHorario,\r\n    ];\r\n  };\r\n\r\n  ////Abrir dialog de editar\r\n  const handleEditarAbierto = () => {\r\n    setDialogoEditarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog de editar\r\n  const handleEditarCerrado = () => {\r\n    setDialogoEditarAbierto(false);\r\n  };\r\n\r\n  //Abrir dialog para eliminar\r\n  const handleEliminarAbierto = () => {\r\n    setDialogoEliminarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog para eliminar\r\n  const handleEliminarCerrado = () => {\r\n    setDialogoEliminarAbierto(false);\r\n  };\r\n\r\n  //Abrir dialog para agregar\r\n  const handleAgregarAbierto = () => {\r\n    setDialogoAgregarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog para agregar\r\n  const handleAgregarCerrado = () => {\r\n    setDialogoAgregarAbierto(false);\r\n  };\r\n\r\n  //Cambiar entre Tabs\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  //Función para limpia los campos\r\n  const limpiar = () => {\r\n    setClaveMateria(\"\");\r\n    setGrupo(\"\");\r\n    setAula(\"\");\r\n    setHoraInicio(\"\");\r\n    setHoraTermino(\"\");\r\n    setLunes(true);\r\n    setMartes(true);\r\n    setMiercoles(true);\r\n    setJueves(true);\r\n    setViernes(true);\r\n  };\r\n\r\n  //Función para añadir una materia\r\n  const agregarClase = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/horario\",\r\n      {\r\n        clave_materia: claveMateria,\r\n        grupo: grupo,\r\n        docente: docente,\r\n        aula: aula,\r\n        hora_inicio: horaInicio,\r\n        hora_termino: horaTermino,\r\n        lunes: lunes,\r\n        martes: martes,\r\n        miercoles: miercoles,\r\n        jueves: jueves,\r\n        viernes: viernes,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Clase creada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    limpiar();\r\n  };\r\n\r\n  //Función para editar una materia\r\n  const editarClase = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/horario/actualizar\",\r\n      {\r\n        id_clase: idClase,\r\n        clave_materia: claveMateria,\r\n        grupo: grupo,\r\n        docente: docente,\r\n        aula: aula,\r\n        hora_inicio: horaInicio,\r\n        hora_termino: horaTermino,\r\n        lunes: lunes,\r\n        martes: martes,\r\n        miercoles: miercoles,\r\n        jueves: jueves,\r\n        viernes: viernes,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Clase editada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    limpiar();\r\n  };\r\n\r\n  //Función para eliminar una materia\r\n  const eliminarClase = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.delete(\r\n      \"https://kittenbook.software:3005/api/horario\",\r\n      {\r\n        data: {\r\n          id_clase: idClase,\r\n        },\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Clase eliminada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setErrorHorario(true);\r\n      });\r\n    limpiar();\r\n  };\r\n\r\n  return (\r\n    //Contenedor de los componentes que retorna la función\r\n    <Container>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        {errorHorario ? ( //Alerta cuando ocurrre un error\r\n          <Alert severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            Ocurrió un error al intentar eliminar la clase —{\" \"}\r\n            <strong>\r\n              No puedes eliminar una clase de tu horario si tienes tareas de esa\r\n              misma clase. Elimina primero las tareas pertinentes y vuelve a\r\n              intentarlo.\r\n            </strong>\r\n          </Alert>\r\n        ) : null}\r\n        {/* Creación del tab que contiene los dias de la semana*/}\r\n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n          <Tabs value={value} onChange={handleChange} variant=\"fullWidth\">\r\n            <Tab label=\"Lunes\" {...a11yProps(0)} />\r\n            <Tab label=\"Martes\" {...a11yProps(1)} />\r\n            <Tab label=\"Miércoles\" {...a11yProps(2)} />\r\n            <Tab label=\"Jueves\" {...a11yProps(3)} />\r\n            <Tab label=\"Viernes\" {...a11yProps(4)} />\r\n          </Tabs>\r\n        </Box>\r\n        {/*Cuando no hay materias agregadas el día lunes al horario se muestra un mensaje */}\r\n        <TabPanel value={value} index={0}>\r\n          {clases.length === 0 ? (\r\n            <div>\r\n              <br />\r\n              <h4>No hay ninguna clase en lunes. ¡Hurrah!</h4>\r\n              <br />\r\n            </div>\r\n          ) : null}\r\n          {horarioPartido[0] !== undefined\r\n            ? horarioPartido[0].length !== 0\r\n              ? horarioPartido[0].map((clase) => (\r\n                  <div key={clase.id_clase}>\r\n                    <Card sx={{ minWidth: 100 }}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          //Si el usuario agrega una materia tomará los atributos de esta y la asignará\r\n                          //al día correspondiente\r\n                          handleEditarAbierto();\r\n                          setClaseActiva(clase);\r\n                          setIdClase(clase.id_clase);\r\n                          setClaveMateria(clase.clave_materia);\r\n                          setGrupo(clase.grupo);\r\n                          setDocente(clase.docente);\r\n                          setAula(clase.aula);\r\n                          setHoraInicio(clase.hora_inicio);\r\n                          setHoraTermino(clase.hora_termino);\r\n                          setLunes(clase.lunes === 1);\r\n                          setMartes(clase.martes === 1);\r\n                          setMiercoles(clase.miercoles === 1);\r\n                          setJueves(clase.jueves === 1);\r\n                          setViernes(clase.viernes === 1);\r\n                        }}\r\n                      >\r\n                        <CardContent>\r\n                          {/*formato de la typografia del contenido */}\r\n                          <Typography\r\n                            sx={{ fontSize: 14 }}\r\n                            color=\"text.secondary\"\r\n                            gutterBottom\r\n                          >\r\n                            Grupo: {clase.grupo}, Clave: {clase.clave_materia},\r\n                            Aula: {clase.aula} Carrera:{\" \"}\r\n                            {getCarreraMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" component=\"div\">\r\n                            {getNombreMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            Docente: {clase.docente}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Horario: de {clase.hora_inicio.toString() + \":00\"} a{\" \"}\r\n                            {clase.hora_termino.toString() + \":00\"}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))\r\n              : null\r\n            : null}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          {/*Cuando no hay materias agregadas el día martes al horario se muestra un mensaje */}\r\n          {clases.length === 0 ? (\r\n            <div>\r\n              <br />\r\n              <h4>No hay ninguna clase en martes. ¡Hurrah!</h4>\r\n              <br />\r\n            </div>\r\n          ) : null}\r\n          {horarioPartido[1] !== undefined\r\n            ? horarioPartido[1].length !== 0\r\n              ? horarioPartido[1].map((clase) => (\r\n                  <div key={clase.id_clase}>\r\n                    <Card sx={{ minWidth: 100 }}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          //Si el usuario agrega una materia tomará los atributos de esta y la asignará\r\n                          //al día correspondiente\r\n                          handleEditarAbierto();\r\n                          setClaseActiva(clase);\r\n                          setIdClase(clase.id_clase);\r\n                          setClaveMateria(clase.clave_materia);\r\n                          setGrupo(clase.grupo);\r\n                          setDocente(clase.docente);\r\n                          setAula(clase.aula);\r\n                          setHoraInicio(clase.hora_inicio);\r\n                          setHoraTermino(clase.hora_termino);\r\n                          setLunes(clase.lunes === 1);\r\n                          setMartes(clase.martes === 1);\r\n                          setMiercoles(clase.miercoles === 1);\r\n                          setJueves(clase.jueves === 1);\r\n                          setViernes(clase.viernes === 1);\r\n                        }}\r\n                      >\r\n                        <CardContent>\r\n                          {/*formato de la typografia del contenido */}\r\n                          <Typography\r\n                            sx={{ fontSize: 14 }}\r\n                            color=\"text.secondary\"\r\n                            gutterBottom\r\n                          >\r\n                            Grupo: {clase.grupo}, Clave: {clase.clave_materia},\r\n                            Aula: {clase.aula} Carrera:{\" \"}\r\n                            {getCarreraMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" component=\"div\">\r\n                            {getNombreMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            Docente: {clase.docente}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Horario: de {clase.hora_inicio.toString() + \":00\"} a{\" \"}\r\n                            {clase.hora_termino.toString() + \":00\"}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))\r\n              : null\r\n            : null}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          {/*Cuando no hay materias agregadas el día miércoles al horario se muestra un mensaje */}\r\n          {clases.length === 0 ? (\r\n            <div>\r\n              <br />\r\n              <h4>No hay ninguna clase en miércoles. ¡Hurrah!</h4>\r\n              <br />\r\n            </div>\r\n          ) : null}\r\n          {horarioPartido[2] !== undefined\r\n            ? horarioPartido[2].length !== 0\r\n              ? horarioPartido[2].map((clase) => (\r\n                  <div key={clase.id_clase}>\r\n                    <Card sx={{ minWidth: 100 }}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          //Si el usuario agrega una materia tomará los atributos de esta y la asignará\r\n                          //al día correspondiente\r\n                          handleEditarAbierto();\r\n                          setClaseActiva(clase);\r\n                          setIdClase(clase.id_clase);\r\n                          setClaveMateria(clase.clave_materia);\r\n                          setGrupo(clase.grupo);\r\n                          setDocente(clase.docente);\r\n                          setAula(clase.aula);\r\n                          setHoraInicio(clase.hora_inicio);\r\n                          setHoraTermino(clase.hora_termino);\r\n                          setLunes(clase.lunes === 1);\r\n                          setMartes(clase.martes === 1);\r\n                          setMiercoles(clase.miercoles === 1);\r\n                          setJueves(clase.jueves === 1);\r\n                          setViernes(clase.viernes === 1);\r\n                        }}\r\n                      >\r\n                        <CardContent>\r\n                          {/*formato de la typografia del contenido */}\r\n                          <Typography\r\n                            sx={{ fontSize: 14 }}\r\n                            color=\"text.secondary\"\r\n                            gutterBottom\r\n                          >\r\n                            Grupo: {clase.grupo}, Clave: {clase.clave_materia},\r\n                            Aula: {clase.aula} Carrera:{\" \"}\r\n                            {getCarreraMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" component=\"div\">\r\n                            {getNombreMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            Docente: {clase.docente}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Horario: de {clase.hora_inicio.toString() + \":00\"} a{\" \"}\r\n                            {clase.hora_termino.toString() + \":00\"}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))\r\n              : null\r\n            : null}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          {/*Cuando no hay materias agregadas el día jueves al horario se muestra un mensaje */}\r\n          {clases.length === 0 ? (\r\n            <div>\r\n              <br />\r\n              <h4>No hay ninguna clase en jueves. ¡Hurrah!</h4>\r\n              <br />\r\n            </div>\r\n          ) : null}\r\n          {horarioPartido[3] !== undefined\r\n            ? horarioPartido[3].length !== 0\r\n              ? horarioPartido[3].map((clase) => (\r\n                  <div key={clase.id_clase}>\r\n                    <Card sx={{ minWidth: 100 }}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          //Si el usuario agrega una materia tomará los atributos de esta y la asignará\r\n                          //al día correspondiente\r\n                          handleEditarAbierto();\r\n                          setClaseActiva(clase);\r\n                          setIdClase(clase.id_clase);\r\n                          setClaveMateria(clase.clave_materia);\r\n                          setGrupo(clase.grupo);\r\n                          setDocente(clase.docente);\r\n                          setAula(clase.aula);\r\n                          setHoraInicio(clase.hora_inicio);\r\n                          setHoraTermino(clase.hora_termino);\r\n                          setLunes(clase.lunes === 1);\r\n                          setMartes(clase.martes === 1);\r\n                          setMiercoles(clase.miercoles === 1);\r\n                          setJueves(clase.jueves === 1);\r\n                          setViernes(clase.viernes === 1);\r\n                        }}\r\n                      >\r\n                        <CardContent>\r\n                          {/*formato de la typografia del contenido */}\r\n                          <Typography\r\n                            sx={{ fontSize: 14 }}\r\n                            color=\"text.secondary\"\r\n                            gutterBottom\r\n                          >\r\n                            Grupo: {clase.grupo}, Clave: {clase.clave_materia},\r\n                            Aula: {clase.aula} Carrera:{\" \"}\r\n                            {getCarreraMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" component=\"div\">\r\n                            {getNombreMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            Docente: {clase.docente}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Horario: de {clase.hora_inicio.toString() + \":00\"} a{\" \"}\r\n                            {clase.hora_termino.toString() + \":00\"}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))\r\n              : null\r\n            : null}\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4}>\r\n          {/*Cuando no hay materias agregadas el día viernes al horario se muestra un mensaje */}\r\n          {clases.length === 0 ? (\r\n            <div>\r\n              <br />\r\n              <h4>No hay ninguna clase en viernes. ¡Hurrah!</h4>\r\n              <br />\r\n            </div>\r\n          ) : null}\r\n          {horarioPartido[4] !== undefined\r\n            ? horarioPartido[4].length !== 0\r\n              ? horarioPartido[4].map((clase) => (\r\n                  <div key={clase.id_clase}>\r\n                    <Card sx={{ minWidth: 100 }}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          //Si el usuario agrega una materia tomará los atributos de esta y la asignará\r\n                          //al día correspondiente\r\n                          handleEditarAbierto();\r\n                          setClaseActiva(clase);\r\n                          setIdClase(clase.id_clase);\r\n                          setClaveMateria(clase.clave_materia);\r\n                          setGrupo(clase.grupo);\r\n                          setDocente(clase.docente);\r\n                          setAula(clase.aula);\r\n                          setHoraInicio(clase.hora_inicio);\r\n                          setHoraTermino(clase.hora_termino);\r\n                          setLunes(clase.lunes === 1);\r\n                          setMartes(clase.martes === 1);\r\n                          setMiercoles(clase.miercoles === 1);\r\n                          setJueves(clase.jueves === 1);\r\n                          setViernes(clase.viernes === 1);\r\n                        }}\r\n                      >\r\n                        <CardContent>\r\n                          {/*formato de la typografia del contenido */}\r\n                          <Typography\r\n                            sx={{ fontSize: 14 }}\r\n                            color=\"text.secondary\"\r\n                            gutterBottom\r\n                          >\r\n                            Grupo: {clase.grupo}, Clave: {clase.clave_materia},\r\n                            Aula: {clase.aula} Carrera:{\" \"}\r\n                            {getCarreraMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography variant=\"h5\" component=\"div\">\r\n                            {getNombreMateria(clase.clave_materia)}\r\n                          </Typography>\r\n                          <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            Docente: {clase.docente}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Horario: de {clase.hora_inicio.toString() + \":00\"} a{\" \"}\r\n                            {clase.hora_termino.toString() + \":00\"}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                  </div>\r\n                ))\r\n              : null\r\n            : null}\r\n        </TabPanel>\r\n        <br />\r\n        {/*Boton agregar*/}\r\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            <Grid item sx={{ display: \"flex\", width: \"90em\" }}>\r\n              {/* Inicio Card del boton + (agregar)*/}\r\n              <Card\r\n                sx={{\r\n                  width: \"100%\",\r\n                  borderRadius: \"20px\",\r\n                  maxWidth: 952,\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {/* Area dee acción de la tarjeta */}\r\n                <CardActionArea\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    height: \"100%\",\r\n                    alignItems: \"flex-start\",\r\n                  }}\r\n                  // Al hacer click muestra el dialog para agregar las materias\r\n                  onClick={handleAgregarAbierto}\r\n                >\r\n                  {/* Contenido de la tarjeta */}\r\n                  <CardContent\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      height: \"100%\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {/* Icono */}\r\n                    <AddCircleOutlineIcon\r\n                      sx={{ fontSize: 100, color: \"#1976d2\" }}\r\n                    />\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        {/*Dialogo agregar*/}\r\n        <Dialog\r\n          fullWidth\r\n          open={dialogoAgregarAbierto}\r\n          onClose={handleAgregarCerrado}\r\n        >\r\n          <DialogTitle>Nueva clase</DialogTitle>\r\n          {/* Contenido del dialog */}\r\n          <DialogContent>\r\n            {/*Formato del contenido del dialogo */}\r\n            <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n              {/* Campo de texto para la clave de la materia */}\r\n              <FormControl variant=\"filled\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Clave de la materia\r\n                </InputLabel>\r\n                <Select\r\n                  value={claveMateria}\r\n                  label=\"Clave de la materia\"\r\n                  onChange={(e) => {\r\n                    setClaveMateria(e.target.value);\r\n                    setValue(0);\r\n                  }}\r\n                >\r\n                  {historialPartido[1] !== undefined ? (\r\n                    historialPartido[1].length === 0 ? (\r\n                      <MenuItem>\r\n                        Aún no estás cursando ninguna materia.\r\n                      </MenuItem>\r\n                    ) : null\r\n                  ) : null}\r\n                  {historialPartido[1] !== undefined\r\n                    ? historialPartido[1].map((materia) => (\r\n                        <MenuItem\r\n                          value={materia.clave_materia}\r\n                          key={materia.id_curso}\r\n                        >\r\n                          {materia.clave_materia +\r\n                            \": \" +\r\n                            getNombreMateria(materia.clave_materia)}\r\n                        </MenuItem>\r\n                      ))\r\n                    : null}\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para el grupo de la materia */}\r\n              <DialogContentText>Grupo</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                id=\"titulo\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <GroupIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setGrupo(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para el docente de la materia */}\r\n              <DialogContentText>Docente</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                id=\"titulo\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setDocente(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para el aula de la materia */}\r\n              <DialogContentText>Aula</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                id=\"titulo\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <RoomIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setAula(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para la hora de inicio de la clase */}\r\n              <DialogContentText>Hora de inicio</DialogContentText>\r\n              <Slider\r\n                defaultValue={12}\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks\r\n                min={0}\r\n                max={23}\r\n                onChange={(e) => {\r\n                  setHoraInicio(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para la hora de terminación de la clase */}\r\n              <DialogContentText>Hora de término</DialogContentText>\r\n              <Slider\r\n                defaultValue={12}\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks\r\n                min={0}\r\n                max={23}\r\n                onChange={(e) => {\r\n                  setHoraTermino(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/* Campo de texto para los días de la semana de la materia */}\r\n              <DialogContentText>Días</DialogContentText>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => {\r\n                        setLunes(!lunes);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Lunes\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => {\r\n                        setMartes(!martes);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Martes\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => {\r\n                        setMiercoles(!miercoles);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Miércoles\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => {\r\n                        setJueves(!jueves);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Jueves\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked\r\n                      onChange={(e) => {\r\n                        setViernes(!viernes);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Viernes\"\r\n                />\r\n              </FormGroup>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* Botones para cerrar y para añadir la tarea */}\r\n            <Button onClick={handleAgregarCerrado}>Cancelar</Button>\r\n            <Button\r\n              disabled={condicion}\r\n              onClick={() => {\r\n                agregarClase();\r\n                setDialogoAgregarAbierto(false);\r\n              }}\r\n            >\r\n              Agregar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*Dialogo editar*/}\r\n        <Dialog\r\n          fullWidth\r\n          open={dialogoEditarAbierto}\r\n          onClose={handleEditarCerrado}\r\n        >\r\n          {/*Editar la clave de la materia */}\r\n          <DialogTitle>Editar clase</DialogTitle>\r\n          <DialogContent>\r\n            <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Clave de la materia</InputLabel>\r\n                <Select\r\n                  value={claveMateria}\r\n                  label=\"Clave de la materia\"\r\n                  onChange={(e) => {\r\n                    setClaveMateria(e.target.value);\r\n                    setValue(0);\r\n                  }}\r\n                >\r\n                  <MenuItem value={claseActiva.clave_materia}>\r\n                    {claseActiva.clave_materia}\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <br />\r\n              {/*Editar el grupo de la materia */}\r\n              <DialogContentText>Grupo</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                defaultValue={claseActiva.grupo}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <GroupIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setGrupo(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*Editar el docente de la materia */}\r\n              <DialogContentText>Docente</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                defaultValue={claseActiva.docente}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <PersonIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setDocente(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*Editar el aula de la materia */}\r\n              <DialogContentText>Aula</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                defaultValue={claseActiva.aula}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <RoomIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setAula(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*Editar la horario de inicio de la materia */}\r\n              <DialogContentText>Hora de inicio</DialogContentText>\r\n              <Slider\r\n                defaultValue={\r\n                  claseActiva.hora_inicio !== undefined\r\n                    ? parseInt(claseActiva.hora_inicio)\r\n                    : 0\r\n                }\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks\r\n                min={0}\r\n                max={23}\r\n                onChange={(e) => {\r\n                  setHoraInicio(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*Editar la hora de terminación de la materia */}\r\n              <DialogContentText>Hora de término</DialogContentText>\r\n              <Slider\r\n                defaultValue={\r\n                  claseActiva.hora_termino !== undefined\r\n                    ? parseInt(claseActiva.hora_termino)\r\n                    : 0\r\n                }\r\n                valueLabelDisplay=\"auto\"\r\n                step={1}\r\n                marks\r\n                min={0}\r\n                max={23}\r\n                onChange={(e) => {\r\n                  setHoraTermino(e.target.value);\r\n                }}\r\n              />\r\n              <br />\r\n              <br />\r\n              {/*Editar los dias de la semana de la materia */}\r\n              <DialogContentText>Días</DialogContentText>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={claseActiva.lunes === 1}\r\n                      onChange={(e) => {\r\n                        setLunes(!lunes); //asignar el dia lunes\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Lunes\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={claseActiva.martes === 1}\r\n                      onChange={(e) => {\r\n                        setMartes(!martes); //asignar el dia martes\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Martes\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={claseActiva.miercoles === 1}\r\n                      onChange={(e) => {\r\n                        setMiercoles(!miercoles); //asignar el dia miercoles\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Miércoles\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={claseActiva.jueves === 1}\r\n                      onChange={(e) => {\r\n                        setJueves(!jueves); //asignar el día jueves\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Jueves\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={claseActiva.viernes === 1}\r\n                      onChange={(e) => {\r\n                        setViernes(!viernes); //asignar el día viernes\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Viernes\"\r\n                />\r\n              </FormGroup>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* Botón para cerrar el dialog */}\r\n            <Button\r\n              onClick={() => {\r\n                handleEditarCerrado();\r\n              }}\r\n            >\r\n              Cancelar\r\n            </Button>\r\n            {/* Botón para eliminar una clase */}\r\n            <Button\r\n              onClick={() => {\r\n                // Al hacer click, se abre el dialog para eliminar la clase\r\n                handleEliminarAbierto();\r\n              }}\r\n            >\r\n              Eliminar clase\r\n            </Button>\r\n            {/* Botón para editar */}\r\n            <Button\r\n              disabled={condicion}\r\n              onClick={() => {\r\n                // Al hacer click, edita los datos y se cierra el dialog\r\n                editarClase();\r\n                handleEditarCerrado();\r\n              }}\r\n            >\r\n              Aceptar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*Confirmar eliminar*/}\r\n        <Dialog open={dialogoEliminarAbierto} onClose={handleEliminarCerrado}>\r\n          <DialogTitle>\r\n            {\"¿Estás segur@ que quieres eliminar la clase?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Esta acción es permanente y no se puede revertir.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {/* Botón para cerrar el dialog */}\r\n            <Button\r\n              onClick={() => {\r\n                handleEliminarCerrado();\r\n              }}\r\n            >\r\n              No\r\n            </Button>\r\n            {/* Botón para confirmar la eliminación de la clase */}\r\n            <Button\r\n              onClick={() => {\r\n                // Elimina la clase y cierra ambos dialog\r\n                eliminarClase();\r\n                handleEliminarCerrado();\r\n                handleEditarCerrado();\r\n              }}\r\n              autoFocus\r\n            >\r\n              Sí\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","//imports utilizados por esta clase\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport TitleIcon from \"@mui/icons-material/Title\";\r\n\r\nimport Axios from \"axios\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\n\r\n//Funcion por default, solo accesible mediante inicio de sesion\r\nexport default function Notas() {\r\n  Axios.defaults.withCredentials = true;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  //Estados para agregar notas con su titulo contenido, y abrir dialogos\r\n  const [accionUsuario, setAccionUsuario] = useState(false);\r\n  const [notas, setNotas] = useState([]);\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [contenido, setContenido] = useState(\"\");\r\n  const [dialogoAgregarAbierto, setDialogoAgregarAbierto] = useState(false);\r\n  const [dialogoEditarAbierto, setDialogoEditarAbierto] = useState(false);\r\n  const [dialogoEliminarAbierto, setDialogoEliminarAbierto] = useState(false);\r\n  const [idNota, setIdNota] = useState(0);\r\n  const [notaActiva, setNotaActiva] = useState({});\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://kittenbook.software:3005/api/notas\")\r\n      .then((res) => {\r\n        setNotas(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    return () => {\r\n      setTitulo(\"\"); //Establecer titulo contenido del formulario\r\n      setContenido(\"\");\r\n    };\r\n  }, [accionUsuario]);\r\n\r\n  //Eventos que pueden ser provocados por el usuario\r\n  const handleEditarAbierto = () => {\r\n    setDialogoEditarAbierto(true);\r\n  };\r\n\r\n  const handleEditarCerrado = () => {\r\n    setDialogoEditarAbierto(false);\r\n  };\r\n\r\n  const handleEliminarAbierto = () => {\r\n    setDialogoEliminarAbierto(true);\r\n  };\r\n\r\n  const handleEliminarCerrado = () => {\r\n    setDialogoEliminarAbierto(false);\r\n  };\r\n\r\n  const handleAgregarAbierto = () => {\r\n    setDialogoAgregarAbierto(true);\r\n  };\r\n\r\n  const handleAgregarCerrado = () => {\r\n    setDialogoAgregarAbierto(false);\r\n  };\r\n  ////////////////////////////////////////////\r\n  //Enviar nota creada a la base de datos\r\n  const enviarNota = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/notas\",\r\n      {\r\n        titulo: titulo,\r\n        contenido: contenido,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Nota creada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      }); //Borrar campos para nueva nota\r\n    setTitulo(\"\");\r\n    setContenido(\"\");\r\n  };\r\n  //Edicion de notas, el funcionamiento es similar a la funcion anterior\r\n  const editarNota = (id_nota) => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/notas/actualizar\",\r\n      {\r\n        id_nota: id_nota,\r\n        titulo: titulo,\r\n        contenido: contenido,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Nota editada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTitulo(\"\");\r\n    setContenido(\"\");\r\n  };\r\n  //Eliminacion de notas por id de la nota\r\n  const eliminarNota = (id_nota) => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.delete(\r\n      //Se conecta a la base de datos y se elimina el registro\r\n      \"https://kittenbook.software:3005/api/notas\",\r\n      {\r\n        data: {\r\n          id_nota: id_nota,\r\n        },\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Nota eliminada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTitulo(\"\");\r\n    setContenido(\"\");\r\n  };\r\n  //Diseño del contenido\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        <br />\r\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            {\" \"}\r\n            {/*Grid principal*/}\r\n            {notas.length === 0 ? ( //Mostrar mensaje para cuando no hay notas\r\n              <div>\r\n                <br />\r\n                <h4>Aún no tienes ninguna nota.</h4>\r\n                <br />\r\n                <Grid\r\n                  item\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    width: \"90em\",\r\n                  }}\r\n                >\r\n                  {/* Inicio Card del boton + (agregar)*/}\r\n                  <Card\r\n                    sx={{\r\n                      //Propiedades del card\r\n                      width: \"100%\",\r\n                      borderRadius: \"20px\",\r\n                      maxWidth: 952,\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    <CardActionArea\r\n                      sx={{\r\n                        //Propiedades dialogo\r\n                        display: \"flex\",\r\n                        height: \"100%\",\r\n                        alignItems: \"flex-start\",\r\n                      }}\r\n                      onClick={handleAgregarAbierto}\r\n                    >\r\n                      <CardContent\r\n                        sx={{\r\n                          //Card  boton agregar\r\n                          display: \"flex\",\r\n                          height: \"100%\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AddCircleOutlineIcon //icono de +\r\n                          sx={{ fontSize: 100, color: \"#1976d2\" }}\r\n                        />\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                </Grid>\r\n              </div>\r\n            ) : (\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                {\" \"}\r\n                {/*Grid para cuando existen notas */}\r\n                <Card\r\n                  sx={{\r\n                    //Propiedades para generar la cuadricula y sus diseños\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    backgroundColor: \"transparent\",\r\n                    boxShadow: \"none\",\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <CardActionArea\r\n                    sx={{\r\n                      //Card action abierto\r\n                      display: \"flex\",\r\n                      height: \"100%\",\r\n                      alignItems: \"flex-start\",\r\n                    }}\r\n                    onClick={handleAgregarAbierto}\r\n                  >\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        height: \"100%\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <AddCircleOutlineIcon\r\n                        sx={{ fontSize: 100, color: \"#1976d2\" }}\r\n                      />\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            )}\r\n            {/*Diseño del card para las notas */}\r\n            {notas.map((nota) => (\r\n              <Grid item key={nota.id_nota} xs={12} sm={6} md={4}>\r\n                <Card\r\n                  sx={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                  }}\r\n                >\r\n                  <CardActionArea //mostrar datos al abrir la nota\r\n                    onClick={() => {\r\n                      handleEditarAbierto();\r\n                      setNotaActiva(nota);\r\n                      setIdNota(nota.id_nota);\r\n                      setTitulo(nota.titulo);\r\n                      setContenido(nota.contenido);\r\n                    }}\r\n                  >\r\n                    {/*Card general para todas las notas en contenido*/}\r\n                    <CardContent sx={{ flexGrow: 1 }}>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {nota.titulo}\r\n                      </Typography>\r\n                      <Typography>{nota.contenido}</Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n        {/*NUEVA NOTA*/}\r\n        <Dialog\r\n          fullWidth //Dialogo para agregar nota\r\n          open={dialogoAgregarAbierto}\r\n          onClose={handleAgregarCerrado}\r\n        >\r\n          <DialogTitle>Nueva nota</DialogTitle>\r\n          <DialogContent>\r\n            <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n              <DialogContentText>Título</DialogContentText>\r\n              <TextField\r\n                autoFocus //Propiedades\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                id=\"titulo\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    //Formatos para los inputs para que el usuario ingrese contenido\r\n                    <InputAdornment position=\"start\">\r\n                      <TitleIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setTitulo(e.target.value);\r\n                }}\r\n              />\r\n              <DialogContentText>Contenido</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"contenido\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={6}\r\n                required\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <TextSnippetIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setContenido(e.target.value);\r\n                }}\r\n              />\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleAgregarCerrado}>Cancelar</Button>\r\n            <Button\r\n              disabled={titulo === \"\" || contenido === \"\"}\r\n              onClick={() => {\r\n                enviarNota();\r\n                handleAgregarCerrado();\r\n              }}\r\n            >\r\n              Agregar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*VER O EDITAR NOTA*/}\r\n        <Dialog\r\n          fullScreen={true}\r\n          open={dialogoEditarAbierto}\r\n          onClose={handleEditarCerrado}\r\n        >\r\n          <DialogTitle>Ver o editar nota</DialogTitle>\r\n          <DialogContent>\r\n            <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n              <DialogContentText>Título</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                id=\"titulo\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={notaActiva.titulo}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <TitleIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setTitulo(e.target.value);\r\n                }}\r\n              />\r\n              <DialogContentText>Contenido</DialogContentText>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"contenido\"\r\n                size=\"small\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                multiline\r\n                rows={15}\r\n                required\r\n                defaultValue={notaActiva.contenido}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <TextSnippetIcon\r\n                        sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                      />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  setContenido(e.target.value);\r\n                }}\r\n              />\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleEditarCerrado}>Cancelar</Button>\r\n            <Button\r\n              onClick={() => {\r\n                handleEliminarAbierto();\r\n              }}\r\n            >\r\n              Eliminar nota\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                editarNota(idNota);\r\n                handleEditarCerrado();\r\n              }}\r\n            >\r\n              Aceptar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/*CONFIRMAR ELIMINAR NOTA*/}\r\n        <Dialog open={dialogoEliminarAbierto} onClose={handleEliminarCerrado}>\r\n          <DialogTitle>\r\n            {\"¿Estás segur@ que quieres eliminar la nota?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Esta acción es permanente y no se puede revertir.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={() => {\r\n                handleEliminarCerrado();\r\n              }}\r\n            >\r\n              No\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                eliminarNota(idNota);\r\n                handleEliminarCerrado();\r\n                handleEditarCerrado();\r\n              }}\r\n              autoFocus\r\n            >\r\n              Sí\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//imports utilizados por esta clase\r\nimport Box from \"@mui/material/Box\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Select } from \"@mui/material\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport TextSnippetIcon from \"@mui/icons-material/TextSnippet\";\r\nimport TitleIcon from \"@mui/icons-material/Title\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport TimerIcon from \"@mui/icons-material/Timer\";\r\nimport TimerOffIcon from \"@mui/icons-material/TimerOff\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Axios from \"axios\";\r\n\r\n//Funcion para crear TabPanels de las categorias de las tareas.\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div //Propiedades del panel\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n      style={{ width: \"100%\" }} //Ancho del componente\r\n    >\r\n      {/* Verifica que TabPanel se esta seleccionando */}\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {/* Componentes dentro del tabpanel */}\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n//Propiedades requeridas por el tabpanel\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\n//Agregar propiedades de react a los tabpanel\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//Función que exporta la clase\r\nexport default function Tareas() {\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      {/* Retorna ListaTabs */}\r\n      <ListaTabs />\r\n    </Box>\r\n  );\r\n}\r\n\r\n//Funcion de la ListaTabs\r\nfunction ListaTabs() {\r\n  Axios.defaults.withCredentials = true;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  //Declaración de los hooks (arrays) de diversos parámetros como las materias, tareas, clases, titulos, estados, etc.\r\n  const [accionUsuario, setAccionUsuario] = useState(false);\r\n  const [materias, setMaterias] = useState([]);\r\n  const [tareas, setTareas] = useState([]);\r\n  const [clases, setClases] = useState([]);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [dialogoAgregarAbierto, setDialogoAgregarAbierto] = useState(false);\r\n  const [dialogoEditarAbierto, setDialogoEditarAbierto] = useState(false);\r\n  const [dialogoEliminarAbierto, setDialogoEliminarAbierto] = useState(false);\r\n  const [idTarea, setIdTarea] = useState(\"\");\r\n  const [titulo, setTitulo] = useState(\"\");\r\n  const [descripcion, setDescripcion] = useState(\"\");\r\n  const [estado, setEstado] = useState(\"No iniciada\");\r\n  const [claveMateria, setClaveMateria] = useState(\"\");\r\n  const [tareaActiva, setTareaActiva] = useState({});\r\n  const [estaAbiertoSnackbarComenzada, setEstaAbiertoSnackbarComenzada] =\r\n    useState(false);\r\n  const [estaAbiertoSnackbarFinalizada, setEstaAbiertoSnackbarFinalizada] =\r\n    useState(false);\r\n  let condicion = titulo === \"\" || descripcion === \"\" || claveMateria === \"\";\r\n  let i = 0;\r\n  let j = 0; //Contador de tabs\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://kittenbook.software:3005/api/materias\")\r\n      .then((res) => {\r\n        setMaterias(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Axios.get(\"https://kittenbook.software:3005/api/horario\")\r\n      .then((res) => {\r\n        setClases(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Axios.get(\"https://kittenbook.software:3005/api/tareas\")\r\n      .then((res) => {\r\n        setTareas(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [accionUsuario]);\r\n\r\n  //Función para validar la materia\r\n  const getNombreMateria = (clave_materia) => {\r\n    let result;\r\n    materias.forEach((materia) => {\r\n      if (materia.clave_materia === clave_materia) {\r\n        result = materia.nombre_materia;\r\n      }\r\n    });\r\n    return result; //Devuelve el nombre de la materia que tenga la misma clave\r\n  };\r\n\r\n  //Funcion para recuperar las tareas de una materia\r\n  const encontrarTareas = (clave_materia) => {\r\n    let tareasMateria = [];\r\n    tareas.forEach((tarea) => {\r\n      if (tarea.clave_materia === clave_materia) {\r\n        tareasMateria.push(tarea); //Guarda la tarea obtenida en un arreglo\r\n      }\r\n    });\r\n    return tareasMateria; //Devuelve el arreglo\r\n  };\r\n\r\n  //Función para limpiar los parámetros de la tarea\r\n  const limpiar = () => {\r\n    setTitulo(\"\");\r\n    setDescripcion(\"\");\r\n    setEstado(\"No iniciada\");\r\n    setClaveMateria(\"\");\r\n  };\r\n\r\n  //Función para añadir una tarea\r\n  const agregarTarea = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/tareas\",\r\n      {\r\n        //Asigna el valor correspondiente a cada variable\r\n        clave_materia: claveMateria,\r\n        titulo: titulo,\r\n        descripcion: descripcion,\r\n        estado: estado,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        //Mensaje cuando la tarea se crea correctamente\r\n        console.log(\"Tarea creada.\");\r\n      })\r\n      .catch((err) => {\r\n        //Mensaje cuando ocurre algún error\r\n        console.log(err);\r\n      });\r\n    //Limpia los campos\r\n    limpiar();\r\n  };\r\n\r\n  //Función empezarTarea\r\n  const empezarTarea = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/tareas/empezar\",\r\n      {\r\n        //Asigna la id de la tarea que va a empezar\r\n        id_tarea: idTarea,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        //Si es correcta, muestra un mensaje de tarea comenzada\r\n        console.log(\"Tarea comenzada.\");\r\n      })\r\n      .catch((err) => {\r\n        //Sino, arroja un error\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Función finalizarTarea\r\n  const finalizarTarea = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/tareas/finalizar\",\r\n      {\r\n        //Asigna la idTarea seleccionada\r\n        id_tarea: idTarea,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        //Mensaje si la tarea es correcta\r\n        console.log(\"Tarea finalizada.\");\r\n      })\r\n      .catch((err) => {\r\n        //Mensaje si hubo un error\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //Función para actualizar los datos de una tarea\r\n  const actualizarTarea = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/tareas/actualizar\",\r\n      {\r\n        id_tarea: idTarea, //Asigna la id de la tarea\r\n        titulo: titulo, //Asigna el título\r\n        descripcion: descripcion, //Asigna la descripción de la tarea\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        //Si se realizó correctamente, arroja un mensaje de tarea editada\r\n        console.log(\"Tarea editada.\");\r\n      })\r\n      .catch((err) => {\r\n        //Sino arroja un mensaje de error\r\n        console.log(err);\r\n      });\r\n    //Limpia los campos\r\n    limpiar();\r\n  };\r\n\r\n  //Función eliminarTarea\r\n  const eliminarTarea = () => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.delete(\r\n      \"https://kittenbook.software:3005/api/tareas\",\r\n      {\r\n        data: {\r\n          id_tarea: idTarea, //Asigna el id de la tarea\r\n        },\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        //Si se realizó, arroja mensaje de tarea eliminada\r\n        console.log(\"Tarea eliminada.\");\r\n      })\r\n      .catch((err) => {\r\n        //Sino, muestra un mensaje de error\r\n        console.log(err);\r\n      });\r\n    //Limpia los campos\r\n    limpiar();\r\n  };\r\n\r\n  //Abrir dialog de editar\r\n  const handleEditarAbierto = () => {\r\n    setDialogoEditarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog de editar\r\n  const handleEditarCerrado = () => {\r\n    setDialogoEditarAbierto(false);\r\n  };\r\n\r\n  //Abrir dialog para eliminar\r\n  const handleEliminarAbierto = () => {\r\n    setDialogoEliminarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog para eliminar\r\n  const handleEliminarCerrado = () => {\r\n    setDialogoEliminarAbierto(false);\r\n  };\r\n\r\n  //Abrir dialog para agregar\r\n  const handleAgregarAbierto = () => {\r\n    setDialogoAgregarAbierto(true);\r\n  };\r\n\r\n  //Cerrar dialog para agregar\r\n  const handleAgregarCerrado = () => {\r\n    setDialogoAgregarAbierto(false);\r\n  };\r\n\r\n  //Cambiar entre Tabs\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    //Contenedor de los componentes que retorna la función\r\n    <div>\r\n      {/* Contenedor de la barra de tabs */}\r\n      <Box\r\n        sx={{\r\n          width: \"95%\",\r\n          maxWidth: 1000,\r\n          margin: \"0 auto\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Tabs\r\n          // Muestra el tab seleccionado\r\n          value={tabValue}\r\n          //Manejar cambios de tab\r\n          onChange={handleChange}\r\n          //Variante de los tabs\r\n          variant=\"scrollable\"\r\n        >\r\n          {/* Retorna los tabs, según la lista de clases */}\r\n          {clases !== undefined\r\n            ? clases.length !== 0\r\n              ? clases.map((clase) => (\r\n                  <Tab\r\n                    key={clase.id_clase} //Clave del tab\r\n                    label={getNombreMateria(clase.clave_materia)} //Etiqueta del tab\r\n                    {...a11yProps(j++)} //Contador de tabs\r\n                  />\r\n                ))\r\n              : null\r\n            : null}\r\n        </Tabs>\r\n      </Box>\r\n      {/* Contenedor de las tarjetas de tareas */}\r\n      <Box\r\n        sx={{\r\n          width: \"95%\",\r\n          maxWidth: 1000,\r\n          margin: \"0 auto\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/* Muestra todas las tareas de la clase */}\r\n        {clases !== undefined\r\n          ? clases.length !== 0\r\n            ? clases.map((clase) => (\r\n                // clave del tabpanel, indice y valor correspondiente a la clase que pertenece\r\n                <TabPanel key={clase.id_clase} index={i++} value={tabValue}>\r\n                  {/* Llama a la función para encontrar las tareas del TabPanel */}\r\n                  {encontrarTareas(clase.clave_materia).map((tarea, index) => (\r\n                    //Contenedor de tipo celda\r\n                    <Grid container sx={{ display: \"block\" }} key={index}>\r\n                      {/* Contenedor de tipo tarjeta */}\r\n                      <Card\r\n                        sx={{\r\n                          height: \"100%\",\r\n                          display: \"flex\",\r\n                        }}\r\n                      >\r\n                        {/* Sector clickable de la tarjeta */}\r\n                        <CardActionArea\r\n                          /*Al hacer click*/ onClick={() => {\r\n                            handleEditarAbierto(); //Abre el dialog de editar\r\n                            setTareaActiva(tarea); //Activa esta tarea\r\n                            setIdTarea(tarea.id_tarea); //Obtiene la id de la tarea\r\n                            setTitulo(tarea.titulo); //Obtiene el título de la tarea\r\n                            setDescripcion(tarea.descripcion); //Obtiene la descripción de la tarea\r\n                            setEstado(tarea.estado); //Obtiene el estado de la tarea\r\n                            setClaveMateria(tarea.clave_materia); //Obtiene la clave de la materia\r\n                          }}\r\n                        >\r\n                          {/* Contenido de la tarjeta */}\r\n                          <CardContent sx={{ flexGrow: 1 }}>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h5\"\r\n                              component=\"h2\"\r\n                            >\r\n                              {tarea.titulo /*Título de la tarea*/}\r\n                            </Typography>\r\n                            <Typography>\r\n                              {tarea.descripcion /*Descripción de la tarea*/}\r\n                            </Typography>\r\n                            <br />\r\n                            {/* Divisor */}\r\n                            <Divider light />\r\n                            <br />\r\n                            <Typography\r\n                              sx={{ fontSize: 14 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              {tarea.estado /*Estado de la tarea*/}\r\n                            </Typography>\r\n                            <br />\r\n                            {/* Divisor */}\r\n                            <Divider light />\r\n                            <br />\r\n                            <Typography\r\n                              sx={{ fontSize: 13 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              Tiempo de creación: {tarea.tiempo_creacion}\r\n                              {/* Tiempo de creación */}\r\n                            </Typography>\r\n                            <Typography\r\n                              sx={{ fontSize: 13 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              Tiempo de inicio:{\" \"}\r\n                              {tarea.tiempo_inicio === \"\"\r\n                                ? \"No iniciada.\"\r\n                                : tarea.tiempo_inicio}\r\n                              {/* Tiempo de inicio de la tarea */}\r\n                            </Typography>\r\n                            <Typography\r\n                              sx={{ fontSize: 13 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              Tiempo de finalización:{\" \"}\r\n                              {tarea.tiempo_finalizacion === \"\"\r\n                                ? \"No finalizada.\"\r\n                                : tarea.tiempo_finalizacion}\r\n                              {/* Tiempo de finalización de la tarea */}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                      <br />\r\n                    </Grid>\r\n                  ))}\r\n                </TabPanel>\r\n              ))\r\n            : null\r\n          : null}\r\n      </Box>\r\n      <br />\r\n      {/*Boton agregar*/}\r\n      <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          <Grid item sx={{ display: \"flex\", width: \"90em\" }}>\r\n            {/* Inicio Card del boton + (agregar)*/}\r\n            <Card\r\n              sx={{\r\n                width: \"100%\",\r\n                borderRadius: \"20px\",\r\n                maxWidth: 952,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              {/* Area dee acción de la tarjeta */}\r\n              <CardActionArea\r\n                sx={{\r\n                  display: \"flex\",\r\n                  height: \"100%\",\r\n                  alignItems: \"flex-start\",\r\n                }}\r\n                // Al hacer click muestra el dialog para agregar tareas.\r\n                onClick={handleAgregarAbierto}\r\n              >\r\n                {/* Contenido de la tarjeta */}\r\n                <CardContent\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    height: \"100%\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  {/* Icono */}\r\n                  <AddCircleOutlineIcon\r\n                    sx={{ fontSize: 100, color: \"#1976d2\" }}\r\n                  />\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/*Dialogo agregar*/}\r\n      <Dialog\r\n        open={dialogoAgregarAbierto}\r\n        onClose={handleAgregarCerrado}\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Agregar tarea</DialogTitle>\r\n        {/* Contenido del dialog */}\r\n        <DialogContent>\r\n          <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n            {/* Campo de texto para el título */}\r\n            <DialogContentText>Título</DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <TitleIcon\r\n                      sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                    />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(e) => {\r\n                setTitulo(e.target.value);\r\n              }}\r\n            />\r\n            {/* Campo de texto para la descripción */}\r\n            <DialogContentText>Descripción</DialogContentText>\r\n            <TextField\r\n              margin=\"dense\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={6}\r\n              required\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <TextSnippetIcon\r\n                      sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                    />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(e) => {\r\n                setDescripcion(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <br />\r\n            {/* Select para la clase */}\r\n            <FormControl fullWidth>\r\n              <InputLabel>Clase</InputLabel>\r\n              <Select\r\n                value={claveMateria}\r\n                label=\"Clase\"\r\n                onChange={(e) => {\r\n                  setClaveMateria(e.target.value);\r\n                  setTabValue(0);\r\n                }}\r\n              >\r\n                {/* Si no hay clases agregadas, arroja un mensaje de error */}\r\n                {clases !== undefined ? (\r\n                  clases.length === 0 ? (\r\n                    <MenuItem>\r\n                      Aún no has agregado ninguna materia a tu horario.\r\n                    </MenuItem>\r\n                  ) : null\r\n                ) : null}\r\n                {clases !== undefined\r\n                  ? clases.length !== 0\r\n                    ? clases.map((clase) => (\r\n                        <MenuItem\r\n                          value={clase.clave_materia}\r\n                          key={clase.id_clase}\r\n                        >\r\n                          {clase.clave_materia +\r\n                            \": \" +\r\n                            getNombreMateria(clase.clave_materia)}\r\n                        </MenuItem>\r\n                      ))\r\n                    : null\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* Botones para cerrar y para añadir la tarea */}\r\n          <Button onClick={handleAgregarCerrado}>Cancelar</Button>\r\n          <Button\r\n            onClick={() => {\r\n              agregarTarea();\r\n              handleAgregarCerrado();\r\n            }}\r\n            disabled={condicion}\r\n          >\r\n            Agregar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/*VER O EDITAR TAREA*/}\r\n      <Dialog\r\n        fullScreen={true}\r\n        open={dialogoEditarAbierto}\r\n        onClose={handleEditarCerrado}\r\n      >\r\n        <DialogTitle>Ver o editar tarea</DialogTitle>\r\n        <DialogContent>\r\n          <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n            {/* Campo de texto para el título */}\r\n            <DialogContentText>Título</DialogContentText>\r\n            <TextField\r\n              margin=\"dense\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              required\r\n              defaultValue={tareaActiva.titulo}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <TitleIcon\r\n                      sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                    />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(e) => {\r\n                setTitulo(e.target.value);\r\n              }}\r\n            />\r\n            {/* Campo de texto para la descripción */}\r\n            <DialogContentText>Descripción</DialogContentText>\r\n            <TextField\r\n              margin=\"dense\"\r\n              size=\"small\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={6}\r\n              required\r\n              defaultValue={tareaActiva.descripcion}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <TextSnippetIcon\r\n                      sx={{ color: \"action.active\", mr: 1, ml: 1.6, my: 0.5 }}\r\n                    />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={(e) => {\r\n                setDescripcion(e.target.value);\r\n              }}\r\n            />\r\n            <br />\r\n            <br />\r\n            {/* Campo de texto para la clase */}\r\n            <FormControl fullWidth>\r\n              <InputLabel>Clase</InputLabel>\r\n              <Select\r\n                value={claveMateria}\r\n                label=\"Clase\"\r\n                onChange={(e) => {\r\n                  setClaveMateria(e.target.value);\r\n                  setTabValue(0);\r\n                }}\r\n              >\r\n                <MenuItem value={tareaActiva.clave_materia}>\r\n                  {tareaActiva.clave_materia}\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n            {/* Boton para iniciar una tarea */}\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                disabled={\r\n                  tareaActiva.estado === \"Iniciada\" ||\r\n                  tareaActiva.estado === \"Finalizada\"\r\n                }\r\n                startIcon={<TimerIcon />}\r\n                // Al hacer click\r\n                onClick={() => {\r\n                  //Se cierra el dialog de editar y comienza la tarea\r\n                  handleEditarCerrado();\r\n                  setEstaAbiertoSnackbarComenzada(true);\r\n                  empezarTarea();\r\n                }}\r\n              >\r\n                Empezar\r\n              </Button>\r\n              {/* Boton para cerrar el dialog */}\r\n              <Button\r\n                variant=\"contained\"\r\n                endIcon={<TimerOffIcon />}\r\n                disabled={\r\n                  tareaActiva.estado === \"No iniciada\" ||\r\n                  tareaActiva.estado === \"Finalizada\"\r\n                }\r\n                // Al hacer click\r\n                onClick={() => {\r\n                  // Se cierra e dialog de editar y se finaliza la tarea\r\n                  handleEditarCerrado();\r\n                  setEstaAbiertoSnackbarFinalizada(true);\r\n                  finalizarTarea();\r\n                }}\r\n              >\r\n                Finalizar\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* Botón para cerrar el dialog */}\r\n          <Button onClick={handleEditarCerrado}>Cancelar</Button>\r\n          {/* Botón para eliminar una tarea */}\r\n          <Button\r\n            onClick={() => {\r\n              // Al hacer click, se abre el dialog para eliminar la tarea\r\n              handleEliminarAbierto();\r\n            }}\r\n          >\r\n            Eliminar tarea\r\n          </Button>\r\n          {/* Botón para actualizar los cambioss */}\r\n          <Button\r\n            onClick={() => {\r\n              // Al hacer click, se actualizan los datos y se cierra el dialog\r\n              actualizarTarea(idTarea);\r\n              handleEditarCerrado();\r\n            }}\r\n          >\r\n            Aceptar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/*SNACKBAR TAREA COMENZADA*/}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        autoHideDuration={5000}\r\n        open={estaAbiertoSnackbarComenzada}\r\n        onClose={() => {\r\n          setEstaAbiertoSnackbarComenzada(false);\r\n        }}\r\n      >\r\n        <Alert severity=\"info\">¡Tarea comenzada!</Alert>\r\n      </Snackbar>\r\n      {/*SNACKBAR TAREA FINALIZADA*/}\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        autoHideDuration={5000}\r\n        open={estaAbiertoSnackbarFinalizada}\r\n        onClose={() => {\r\n          setEstaAbiertoSnackbarFinalizada(false);\r\n        }}\r\n      >\r\n        <Alert severity=\"success\">¡Tarea finalizada!</Alert>\r\n      </Snackbar>\r\n      {/*CONFIRMAR ELIMINAR TAREA*/}\r\n      <Dialog open={dialogoEliminarAbierto} onClose={handleEliminarCerrado}>\r\n        {/* Título del dialog eliminar */}\r\n        <DialogTitle>\r\n          {\"¿Estás segur@ que quieres eliminar la tarea?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {/* Mensaje de advertencia */}\r\n          <DialogContentText>\r\n            Esta acción es permanente y no se puede revertir.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {/* Botón para cerrar el dialog */}\r\n          <Button\r\n            onClick={() => {\r\n              handleEliminarCerrado();\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n          {/* Botón para confirmar la eliminación de la tarea */}\r\n          <Button\r\n            onClick={() => {\r\n              // Elimina la tarea según el id y cierra ambos dialog\r\n              eliminarTarea(idTarea);\r\n              handleEliminarCerrado();\r\n              handleEditarCerrado();\r\n            }}\r\n            autoFocus\r\n          >\r\n            Sí\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/ReticulaSistemasEspTICs.2124de3b.png\";","export default __webpack_public_path__ + \"static/media/ReticulaSistemasEspTecnologiasWeb.0beea728.png\";","export default __webpack_public_path__ + \"static/media/ReticulaElectronicaEspMecatronica.d795e76f.png\";","export default __webpack_public_path__ + \"static/media/ReticulaElectronicaEspSistemasEnergeticos.e22ff627.png\";","export default __webpack_public_path__ + \"static/media/ReticulaElectricaEspSistemasElectricos.935977e6.png\";","export default __webpack_public_path__ + \"static/media/ReticulaGestionEmpresarial.5060195e.png\";","export default __webpack_public_path__ + \"static/media/ReticulaQuimicaEspGestionAmbiental.6b7019a6.png\";","export default __webpack_public_path__ + \"static/media/ReticulaMecanicaEspDisenoMecanico.d9bdbdf5.png\";","export default __webpack_public_path__ + \"static/media/ReticulaMecanicaEspTermica.f5bb81e0.png\";","//imports utilizados por esta clase\r\nimport Box from \"@mui/material/Box\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport DateRangeIcon from \"@mui/icons-material/DateRange\";\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport ReticulaSistemasEspTICs from \"../ReticulaSistemasEspTICs.png\";\r\nimport ReticulaSistemasEspTecnologiasWeb from \"../ReticulaSistemasEspTecnologiasWeb.png\";\r\nimport ReticulaElectronicaEspMecatronica from \"../ReticulaElectronicaEspMecatronica.png\";\r\nimport ReticulaElectronicaEspSistemasEnergeticos from \"../ReticulaElectronicaEspSistemasEnergeticos.png\";\r\nimport ReticulaElectricaEspSistemasElectricos from \"../ReticulaElectricaEspSistemasElectricos.png\";\r\nimport ReticulaGestionEmpresarial from \"../ReticulaGestionEmpresarial.png\";\r\nimport ReticulaQuimicaEspGestionAmbiental from \"../ReticulaQuimicaEspGestionAmbiental.png\";\r\nimport ReticulaMecanicaEspDisenoMecanico from \"../ReticulaMecanicaEspDisenoMecanico.png\";\r\nimport ReticulaMecanicaEspTermica from \"../ReticulaMecanicaEspTermica.png\";\r\nimport Axios from \"axios\";\r\n\r\n//Funcion para generar los paneles de materia y reticula\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    //Propiedades para cada panel\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n      style={{ width: \"100%\" }} //tamaño de la barra de paneles\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          {/*Espaciado entre paneles*/}\r\n          <Typography component={\"div\"}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n//Propiedades para generar los paneles\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n//Funcion principal para devolver el contenido\r\nexport default function Reticula() {\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      {/*Tamaño del cuadro de contenido*/}\r\n      <ListaTabs />\r\n    </Box>\r\n  );\r\n}\r\n//Funcion para generar los tabs de la reticula, solo accesible por inicio de sesion\r\nfunction ListaTabs() {\r\n  Axios.defaults.withCredentials = true;\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  //Estados para agregar las materias, semestres, datos, etc.\r\n  const [accionUsuario, setAccionUsuario] = useState(false);\r\n  const [materias, setMaterias] = useState([]);\r\n  const [historialPartido, setHistorialPartido] = useState([]);\r\n  const [idCurso, setIdCurso] = useState(\"\");\r\n  const [claveMateria, setClaveMateria] = useState(\"\");\r\n  const [estadoMateria, setEstadoMateria] = useState(\"\");\r\n  const [semestreMateria, setSemestreMateria] = useState(0);\r\n  const [calificacionMateria, setCalificacionMateria] = useState(0);\r\n  const [periodoMateria, setPeriodo] = useState(\"\");\r\n  const [anoMateria, setAnoMateria] = useState(0);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [dialogoAgregarAbierto, setDialogoAgregarAbierto] = useState(false);\r\n  const [dialogoEliminarAbierto, setDialogoEliminarAbierto] = useState(false);\r\n  const [presionoAprobada, setPresionoAprobada] = useState(false);\r\n  let i = 0; //Contador para casos\r\n  let condicion;\r\n  //Condicion por si la materia fue aprobada para pedir los datos correspondientes\r\n  if (presionoAprobada) {\r\n    condicion =\r\n      claveMateria === \"\" ||\r\n      estadoMateria === \"\" ||\r\n      semestreMateria === 0 ||\r\n      periodoMateria === \"\" ||\r\n      anoMateria === 0;\r\n  } else {\r\n    condicion = claveMateria === \"\" || estadoMateria === \"\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://kittenbook.software:3005/api/materias\")\r\n      .then((res) => {\r\n        setMaterias(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    Axios.get(\"https://kittenbook.software:3005/api/historial\")\r\n      .then((res) => {\r\n        setHistorialPartido(partirReticula(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [accionUsuario]);\r\n\r\n  //Funcion que pone en 0 o vacio los datos\r\n  const limpiar = () => {\r\n    setClaveMateria(\"\");\r\n    setEstadoMateria(\"\");\r\n    setSemestreMateria(0);\r\n    setCalificacionMateria(0);\r\n    setPeriodo(\"\");\r\n    setAnoMateria(0);\r\n  };\r\n\r\n  //dividir reticula en categorias para una mejor organizacion, primero aprobadas, en curso, y por ultimo\r\n  //pendientes de cursar (entiendase reprobada por materia por cursar)\r\n  const partirReticula = (reticula) => {\r\n    let aprobadasReticula = [];\r\n    let enCursoReticula = [];\r\n    let porCursarReticula = [];\r\n    reticula.forEach((materiaReticula) => {\r\n      if (materiaReticula.estado === \"Aprobada\") {\r\n        aprobadasReticula.push(materiaReticula);\r\n      } else if (materiaReticula.estado === \"En curso\") {\r\n        enCursoReticula.push(materiaReticula);\r\n      } else if (materiaReticula.estado === \"Por cursar\") {\r\n        porCursarReticula.push(materiaReticula);\r\n      }\r\n    });\r\n    return [aprobadasReticula, enCursoReticula, porCursarReticula];\r\n  };\r\n\r\n  //Las siguientes funciones controlan los eventos que pueden ocurrir en esta seccion\r\n  //incluyendo eliminar materias, agregarlas, cambiar estado, abrir cuadros de dialogo etc.\r\n  const handleEliminarAbierto = () => {\r\n    setDialogoEliminarAbierto(true);\r\n  };\r\n\r\n  const handleEliminarCerrado = () => {\r\n    setDialogoEliminarAbierto(false);\r\n  };\r\n\r\n  const handleAgregarAbierto = () => {\r\n    setDialogoAgregarAbierto(true);\r\n  };\r\n\r\n  const handleAgregarCerrado = () => {\r\n    setDialogoAgregarAbierto(false);\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  //con estas funciones se obtienen los datos que el usuario tiene que introducir\r\n  //en el cuadro de dialogo al seleccionar el tipo de materia que agregara a su seccion reticula\r\n  //se obtienen los valores para cada elemento de cada materia recorriendo un ciclo\r\n  const getNombreMateria = (clave_materia) => {\r\n    let result;\r\n    materias.forEach((materia) => {\r\n      if (materia.clave_materia === clave_materia) {\r\n        result = materia.nombre_materia;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const getCreditosMateria = (ClaveMateria) => {\r\n    let creditos;\r\n    materias.forEach((materia) => {\r\n      if (materia.clave_materia === ClaveMateria) {\r\n        creditos = materia.creditos_materia;\r\n      }\r\n    });\r\n    return creditos;\r\n  };\r\n  //En esta funcion se realiza una operacion suma para obtener los creditos acumulados\r\n  const getCreditos = (materiasAprobadas) => {\r\n    let suma = 0;\r\n    materiasAprobadas.forEach((materia) => {\r\n      suma += getCreditosMateria(materia.clave_materia);\r\n    });\r\n    return suma;\r\n  };\r\n  //Aqui se realizan operaciones para obtener la calificacion de cada materia aprobada\r\n  //despues se realiza una division entre la cantidad de materias aprobadas\r\n  const getPromedio = (materiasAprobadas) => {\r\n    let suma = 0;\r\n    let i;\r\n    for (i = 0; i < materiasAprobadas.length; i++) {\r\n      suma += materiasAprobadas[i][\"calificacion\"];\r\n    }\r\n    return suma / i;\r\n  };\r\n\r\n  //funcion para recojer los valores que el usuario ingresa en el formulario\r\n  //al seleccionar una materia para agregar\r\n  const agregarMateria = () => {\r\n    // getMaterias();\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/historial\",\r\n      {\r\n        clave_materia: claveMateria,\r\n        estado: estadoMateria,\r\n        semestre_cursada: semestreMateria,\r\n        calificacion: calificacionMateria,\r\n        periodo_cursada: periodoMateria + \" \" + anoMateria,\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Materia creada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    limpiar();\r\n  };\r\n  //funcion para elminar materias identificandolas por su id del curso\r\n  const eliminarMateria = (idCurso) => {\r\n    setAccionUsuario(!accionUsuario);\r\n    Axios.delete(\r\n      \"https://kittenbook.software:3005/api/historial\",\r\n      {\r\n        data: {\r\n          id_curso: idCurso,\r\n        },\r\n      },\r\n      { headers }\r\n    )\r\n      .then((res) => {\r\n        console.log(\"Materia eliminada.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    limpiar(); //se limpia la seccion de esa materia\r\n  };\r\n\r\n  //funcion de react para generar los tabs\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    //Box para el contenido debajo del nav bar entre materias y reticula\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {/*TABS y sus propiedades*/}\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={handleChange}\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n        >\r\n          {\" \"}\r\n          {/*Tabs generadas */}\r\n          <Tab label=\"Materias\" {...a11yProps(0)} />\r\n          <Tab label=\"Retículas por carrera\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Box>\r\n      {/*Contenido de la reticula*/}\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          maxWidth: 1000,\r\n          margin: \"0 auto\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <TabPanel index={0} value={tabValue}>\r\n          <Grid container spacing={0.5} sx={{ width: \"100%\" }}>\r\n            {historialPartido[0] !== undefined\r\n              ? historialPartido[0].length !== 0\r\n                ? historialPartido[0].map((materiaReticula) => (\r\n                    <Grid //Formato para el grid de la materia en aprobada\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={2}\r\n                      key={materiaReticula.id_curso.toString() + \"0\"}\r\n                    >\r\n                      <Card\r\n                        sx={{\r\n                          //Formato para el card de la materia aprobada\r\n                          height: \"110%\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          borderRadius: \"15px\",\r\n                          border: \"divider\",\r\n                        }}\r\n                      >\r\n                        <CardActionArea\r\n                          sx={{\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(255, 0, 0, 0.2)\",\r\n                              transform: \"scale3d(1.05, 1.05, 1)\",\r\n                            },\r\n                          }}\r\n                          onClick={() => {\r\n                            setIdCurso(materiaReticula.id_curso);\r\n                            handleEliminarAbierto();\r\n                          }}\r\n                        >\r\n                          <CardContent>\r\n                            <Typography\r\n                              sx={{ fontSize: 14 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              {\"Clave: \" + materiaReticula.clave_materia}\r\n                            </Typography>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              style={{ color: \"green\" }}\r\n                            >\r\n                              {getNombreMateria(materiaReticula.clave_materia)}\r\n                            </Typography>\r\n                            <Typography color=\"text.secondary\">\r\n                              {\"Cursada: \" + materiaReticula.periodo_cursada}\r\n                            </Typography>\r\n                            <Typography color=\"text.secondary\">\r\n                              {\"Semestre \" + materiaReticula.semestre_cursada}\r\n                            </Typography>\r\n                          </CardContent>\r\n                          {/*Formato para el numero de la calificacion*/}\r\n                          <CardContent>\r\n                            <Typography\r\n                              sx={{\r\n                                float: \"left\",\r\n                                height: \"100%\",\r\n                                marginTop: \"-20px\",\r\n                                marginLeft: \"40px\",\r\n                                marginRight: \"40px\",\r\n                                width: \"48%\",\r\n                                padding: \"20px\",\r\n                                display: \"inline-block\",\r\n                                position: \"relative\",\r\n                                border: \"solid .1px\",\r\n                                borderColor: \"divider\",\r\n                                flexDirection: \"column\",\r\n                                borderRadius: \"20px\",\r\n                                align: \"center\",\r\n                              }}\r\n                            >\r\n                              {materiaReticula.calificacion}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))\r\n                : null\r\n              : null}\r\n            {/*Cars de las materias en curso*/}\r\n            {historialPartido[1] !== undefined\r\n              ? historialPartido[1].length !== 0\r\n                ? historialPartido[1].map((materiaReticula) => (\r\n                    <Grid //Propiedades del grid\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={2}\r\n                      key={materiaReticula.id_curso.toString() + \"1\"}\r\n                    >\r\n                      <Card\r\n                        sx={{\r\n                          height: \"110%\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          borderRadius: \"15px\",\r\n                          border: \"divider\",\r\n                        }}\r\n                      >\r\n                        <CardActionArea\r\n                          sx={{\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(255, 0, 0, 0.2)\",\r\n                              transform: \"scale3d(1.05, 1.05, 1)\",\r\n                            },\r\n                          }}\r\n                          onClick={() => {\r\n                            setIdCurso(materiaReticula.id_curso);\r\n                            handleEliminarAbierto();\r\n                          }}\r\n                        >\r\n                          <CardContent>\r\n                            <Typography\r\n                              sx={{ fontSize: 14 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              {\"Clave: \" + materiaReticula.clave_materia}\r\n                            </Typography>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              style={{ color: \"blue\" }}\r\n                            >\r\n                              {getNombreMateria(materiaReticula.clave_materia)}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))\r\n                : null\r\n              : null}\r\n            {/*Formatos para materias aprobadas */}\r\n            {historialPartido[2] !== undefined\r\n              ? historialPartido[2].length !== 0\r\n                ? historialPartido[2].map((materiaReticula) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={2}\r\n                      key={materiaReticula.id_curso.toString() + \"2\"}\r\n                    >\r\n                      <Card\r\n                        sx={{\r\n                          height: \"110%\",\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          borderRadius: \"15px\",\r\n                          border: \"divider\",\r\n                        }}\r\n                      >\r\n                        <CardActionArea\r\n                          sx={{\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(255, 0, 0, 0.2)\",\r\n                              transform: \"scale3d(1.05, 1.05, 1)\",\r\n                            },\r\n                          }}\r\n                          onClick={() => {\r\n                            setIdCurso(materiaReticula.id_curso);\r\n                            handleEliminarAbierto();\r\n                          }}\r\n                        >\r\n                          <CardContent>\r\n                            <Typography\r\n                              sx={{ fontSize: 14 }}\r\n                              color=\"text.secondary\"\r\n                              gutterBottom\r\n                            >\r\n                              {\"Clave: \" + materiaReticula.clave_materia}\r\n                            </Typography>\r\n                            <Typography\r\n                              gutterBottom\r\n                              variant=\"h6\"\r\n                              style={{ color: \"#b9b900\" }}\r\n                            >\r\n                              {getNombreMateria(materiaReticula.clave_materia)}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))\r\n                : null\r\n              : null}\r\n          </Grid>\r\n        </TabPanel>\r\n        {/*Segundo tab que muestra las reticulas de las carreras*/}\r\n        <TabPanel index={1} value={tabValue}>\r\n          <Grid\r\n            container //El selector ocupa el ancho de la pantalla\r\n            sx={{ justifyContent: \"space-between\", columnGap: 1, rowGap: 1 }}\r\n          >\r\n            <Accordion>\r\n              <AccordionSummary //Fomrato de panel para esta seccion\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  {\" \"}\r\n                  {/*Se escribe el titulo de la carrera para la reticula que se mostrara*/}\r\n                  Ing. Sistemas (especialidad tecnologías de la información y la\r\n                  comunicación)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                {/*Se agrega la imagen de la reticula al accordion*/}\r\n                <img\r\n                  alt={\"Reticula Sistemas\"}\r\n                  src={ReticulaSistemasEspTICs}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Sistemas (especialidad en tecnologías web y móvil)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Sistemas\"}\r\n                  src={ReticulaSistemasEspTecnologiasWeb}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Electrónica (especialidad mecatrónica y control\r\n                  automático)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Electronica\"}\r\n                  src={ReticulaElectronicaEspMecatronica}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Electrónica (especialidad sistemas energéticos e\r\n                  industriales)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Electronica\"}\r\n                  src={ReticulaElectronicaEspSistemasEnergeticos}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Eléctrica (especialidad sistemas eléctricos)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Electrica\"}\r\n                  src={ReticulaElectricaEspSistemasElectricos}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Gestión Empresarial (especialidad innovación para el\r\n                  desarrollo empresarial)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Gestion Empresarial\"}\r\n                  src={ReticulaGestionEmpresarial}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Química (especialidad gestión ambiental)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Química\"}\r\n                  src={ReticulaQuimicaEspGestionAmbiental}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>Ing. Mecánica (especialidad térmica)</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Mecánica\"}\r\n                  src={ReticulaMecanicaEspTermica}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n            <Accordion>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n              >\r\n                <Typography>\r\n                  Ing. Mecánica (especialidad diseño mecánico)\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <img\r\n                  alt={\"Reticula Mecánica\"}\r\n                  src={ReticulaMecanicaEspDisenoMecanico}\r\n                  width={\"100%\"}\r\n                />\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </Grid>\r\n        </TabPanel>\r\n      </Box>\r\n      <br/>\r\n      {/*Formato de leyenda*/}\r\n      <br />\r\n      <h5 style={{ textAlign: \"center\" }}>Leyenda: </h5>\r\n      <p style={{ color: \"green\", textAlign: \"center\" }}>\r\n        <strong>Aprobadas</strong>\r\n      </p>\r\n      <p style={{ color: \"blue\", textAlign: \"center\" }}>\r\n        <strong>En curso</strong>\r\n      </p>\r\n      <p style={{ color: \"#b9b900\", textAlign: \"center\" }}>\r\n        <strong>Por cursar</strong>\r\n      </p>\r\n      {/*Establecer formato para mostrar el promedio y los creditos completados */}\r\n      <br />\r\n      {historialPartido[0] !== undefined ? (\r\n        historialPartido[0].length !== 0 ? (\r\n          <h5 style={{ textAlign: \"center\" }}>\r\n            {\"Promedio: \" + getPromedio(historialPartido[0])}\r\n          </h5>\r\n        ) : (\r\n          <h5 style={{ textAlign: \"center\" }}>Promedio: n/a</h5>\r\n        )\r\n      ) : null}\r\n      {historialPartido[0] !== undefined ? (\r\n        historialPartido[0].length !== 0 ? (\r\n          <h5 style={{ textAlign: \"center\" }}>\r\n            {\"Créditos completados: \" + getCreditos(historialPartido[0])}\r\n          </h5>\r\n        ) : (\r\n          <h5 style={{ textAlign: \"center\" }}>Créditos completados: n/a</h5>\r\n        )\r\n      ) : null}\r\n      {historialPartido[0] !== undefined ? (\r\n        historialPartido[0].length !== 0 ? (\r\n          <h5 style={{ textAlign: \"center\" }}>\r\n            {\"Créditos faltantes: \" + (250 - getCreditos(historialPartido[0]))}\r\n          </h5>\r\n        ) : (\r\n          <h5 style={{ textAlign: \"center\" }}>Créditos faltantes: n/a</h5>\r\n        )\r\n      ) : null}\r\n      <br/>\r\n      {/*Boton agregar*/}\r\n      <Container sx={{ py: 1 }} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          <Grid item sx={{ display: \"flex\", width: \"90em\" }}>\r\n            {/* Inicio Card del boton + (agregar)*/}\r\n            <Card\r\n              sx={{\r\n                //Propiedas para genera el diseño del card\r\n                width: \"100%\",\r\n                borderRadius: \"20px\",\r\n                maxWidth: 952,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <CardActionArea\r\n                sx={{\r\n                  display: \"flex\",\r\n                  height: \"100%\",\r\n                  alignItems: \"flex-start\",\r\n                }}\r\n                onClick={handleAgregarAbierto}\r\n              >\r\n                <CardContent\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    height: \"100%\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AddCircleOutlineIcon //Icono +\r\n                    sx={{ fontSize: 100, color: \"#1976d2\" }}\r\n                  />\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* Dialogo agregar materia*/}\r\n      <Dialog\r\n        open={dialogoAgregarAbierto}\r\n        onClose={handleAgregarCerrado}\r\n        maxWidth=\"false\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Agregar materia a tu historial académico</DialogTitle>\r\n        <DialogContent>\r\n          <Box m={1} sx={{ justifyContent: \"space-between\" }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Clave de la materia</InputLabel>\r\n              <Select //Tipo de selector para que el usuario ingrese datos\r\n                value={claveMateria}\r\n                label=\"Clave de la materia\"\r\n                onChange={(e) => {\r\n                  setClaveMateria(e.target.value);\r\n                }}\r\n              >\r\n                {/*LLamar funcion para guardar los datos */}\r\n                {materias.map((materiaReticula) => (\r\n                  <MenuItem\r\n                    value={materiaReticula.clave_materia}\r\n                    key={materiaReticula.id_curso || ++i}\r\n                  >\r\n                    {materiaReticula.clave_materia +\r\n                      \": \" +\r\n                      materiaReticula.nombre_materia}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            <br />\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"demo-simple-select-label\">\r\n                Estado de la materia\r\n              </InputLabel>\r\n              <Select\r\n                value={estadoMateria}\r\n                label=\"Estado de la materia\"\r\n                onChange={(e) => {\r\n                  setEstadoMateria(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  value={\"Aprobada\"}\r\n                  onClick={() => {\r\n                    setPresionoAprobada(true);\r\n                  }}\r\n                >\r\n                  Aprobada\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={\"En curso\"}\r\n                  onClick={() => {\r\n                    setPresionoAprobada(false);\r\n                  }}\r\n                >\r\n                  En curso\r\n                </MenuItem>\r\n                <MenuItem\r\n                  value={\"Por cursar\"}\r\n                  onClick={() => {\r\n                    setPresionoAprobada(false);\r\n                  }}\r\n                >\r\n                  Por cursar\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <br />\r\n            {presionoAprobada ? (\r\n              <div>\r\n                <br />\r\n                <DialogContentText>\r\n                  Semestre (en número arábigo)\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  size=\"small\"\r\n                  id=\"titulo\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <CalendarTodayIcon\r\n                          sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                        />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setSemestreMateria(parseInt(e.target.value));\r\n                  }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <DialogContentText>Calificación</DialogContentText>\r\n                <Slider\r\n                  defaultValue={70}\r\n                  valueLabelDisplay=\"auto\"\r\n                  step={1}\r\n                  marks\r\n                  min={70}\r\n                  max={100}\r\n                  onChange={(e) => {\r\n                    setCalificacionMateria(e.target.value);\r\n                  }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Periodo</InputLabel>\r\n                  <Select\r\n                    value={periodoMateria}\r\n                    label=\"Clave de la materia\"\r\n                    onChange={(e) => {\r\n                      setPeriodo(e.target.value);\r\n                    }}\r\n                  >\r\n                    <MenuItem value={\"Enero-junio\"}>Enero-junio</MenuItem>\r\n                    <MenuItem value={\"Agosto-diciembre\"}>\r\n                      Agosto-diciembre\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <br />\r\n                <br />\r\n                <DialogContentText>Año (en número arábigo)</DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  size=\"small\"\r\n                  id=\"titulo\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <DateRangeIcon\r\n                          sx={{ color: \"action.active\", mr: 1, my: 0.5 }}\r\n                        />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setAnoMateria(parseInt(e.target.value));\r\n                  }}\r\n                />\r\n                <br />\r\n              </div>\r\n            ) : null}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleAgregarCerrado();\r\n              setTabValue(0);\r\n              setPresionoAprobada(false);\r\n            }}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            disabled={condicion}\r\n            onClick={() => {\r\n              agregarMateria();\r\n              setPresionoAprobada(false);\r\n              handleAgregarCerrado();\r\n            }}\r\n          >\r\n            Agregar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/*Dialogo eliminar*/}\r\n      <Dialog open={dialogoEliminarAbierto} onClose={handleEliminarCerrado}>\r\n        <DialogTitle>\r\n          {\"¿Estás segur@ que quieres eliminar el curso?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Esta acción es permanente y no se puede revertir.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleEliminarCerrado();\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              eliminarMateria(idCurso);\r\n              handleEliminarCerrado();\r\n            }}\r\n            autoFocus\r\n          >\r\n            Sí\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Inicio la cual nos aparece al ingersar a la página web\r\n//Contiene una funciones para las asignacion de las imagenes que se muestran el interfaz\r\n//</Resumen>\r\n//<para> En esta clase se encuentra informacion del inicio junto con la asignacion\r\n//de imagenes\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creacion> 11 de octubre de 2021 </Fecha de creacion>\r\n\r\n//**********************Imports*************************\r\nimport React from \"react\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\n\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\n\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\n//*******************************************************\r\n\r\n//Funcion que asigna las imagenes dentro del interfaz de inicio\r\nfunction srcSet(image, size, rows = 1, cols = 1) {\r\n  return {\r\n    src: `${image}?w=${size * cols}&h=${size * rows}&fit=crop&auto=format`,\r\n    srcSet: `${image}?w=${size * cols}&h=${\r\n      size * rows\r\n    }&fit=crop&auto=format&dpr=2 2x`,\r\n  };\r\n}\r\n\r\n//Creacion de una variable constante la cual contiene todas las imagenes utilizadas\r\nconst itemData = [\r\n  {\r\n    img: \"https://images.pexels.com/photos/7517/animal-sitting-animals-inside.jpg?auto=compress&cs=tinysrgb&h=350\",\r\n    title: \"Breakfast\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://i1.pickpik.com/photos/815/460/1004/cat-eyes-cat-s-eyes-face-thumb.jpg\",\r\n    title: \"Burger\",\r\n  },\r\n  {\r\n    img: \"https://i1.pickpik.com/photos/224/711/745/cat-animal-pet-mieze-thumb.jpg\",\r\n    title: \"Camera\",\r\n  },\r\n  {\r\n    img: \"https://c.pxhere.com/photos/6d/ee/cat_cat_portrait_animal_cat's_eyes_domestic_cat_eyes_head_cute-1055378.jpg!s\",\r\n    title: \"Coffee\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://www.guideposts.org/sites/default/files/styles/bynder_webimage/public/story/blackcat_marquee_0.jpg\",\r\n    title: \"Hats\",\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://images.pexels.com/photos/416088/pexels-photo-416088.jpeg?auto=compress&cs=tinysrgb&h=350\",\r\n    title: \"Honey\",\r\n    author: \"@arwinneil\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://c4.wallpaperflare.com/wallpaper/969/866/525/cat-look-muzzle-black-background-wallpaper-thumb.jpg\",\r\n    title: \"Basketball\",\r\n  },\r\n  {\r\n    img: \"https://www.publicdomainpictures.net/pictures/90000/velka/ginger-cat-14011197866ER.jpg\",\r\n    title: \"Fern\",\r\n  },\r\n  {\r\n    img: \"https://c4.wallpaperflare.com/wallpaper/839/157/113/cat-gravel-gray-wallpaper-thumb.jpg\",\r\n    title: \"Mushrooms\",\r\n    rows: 2,\r\n    cols: 2,\r\n  },\r\n  {\r\n    img: \"https://c4.wallpaperflare.com/wallpaper/648/247/811/cat-animals-photography-wallpaper-thumb.jpg\",\r\n    title: \"Tomato basil\",\r\n  },\r\n  {\r\n    img: \"https://c4.wallpaperflare.com/wallpaper/678/169/152/animals-hands-cat-wallpaper-thumb.jpg\",\r\n    title: \"Sea star\",\r\n  },\r\n  {\r\n    img: \"https://c.pxhere.com/photos/94/66/cat_feline_pet_playful_portrait_friendship_cute_cat_black-582217.jpg!s\",\r\n    title: \"Bike\",\r\n    cols: 2,\r\n  },\r\n];\r\n\r\n//Funcion para determinar el estandar de las imagenes, es decir,\r\n//la medida que tendran las imagenes\r\nfunction StandardImageList() {\r\n  return (\r\n    <ImageList variant=\"quilted\" cols={4} rowHeight={121}>\r\n      {itemData.map((item) => (\r\n        <ImageListItem\r\n          key={item.img}\r\n          cols={item.cols || 1}\r\n          rows={item.rows || 1}\r\n        >\r\n          <img\r\n            {...srcSet(item.img, 121, item.rows, item.cols)}\r\n            alt={item.title}\r\n            loading=\"lazy\"\r\n          />\r\n        </ImageListItem>\r\n      ))}\r\n    </ImageList>\r\n  );\r\n}\r\n\r\n//Funcion principal en la que se colocan las imagenes en forma de carousel, es decir,\r\n//hacen que se visualicen las imagenes en forma de banner y estas pueden ir cambiando\r\n//y cada una de las imagenes se les agrega una poqueña informacion.\r\nexport default function Inicio() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"md\">\r\n        <br />\r\n        <Carousel>\r\n          {/*Primera imagen del grupo del banner*/}\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://wallpapercave.com/wp/1WXEEWF.jpg\"\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>1</h3>\r\n              <p>\r\n                {/*Información de la primera imagen*/}\r\n                Hay más de 500 millones de gatos domésticos en el mundo, con\r\n                aproximadamente 40 razas reconocidas.\r\n              </p>\r\n            </Carousel.Caption>\r\n            {/*Segunda imagen del grupo del banner*/}\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://i.redd.it/vpfzenk5rac31.jpg\"\r\n              alt=\"Second slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>2</h3>\r\n              <p>\r\n                {/*Información de la segunda imagen*/}\r\n                Un gato no puede bajar de cabeza de un árbol porque todas las\r\n                garras de un gato apuntan en la misma dirección. Para bajar de\r\n                un árbol, un gato debe retroceder.\r\n              </p>\r\n            </Carousel.Caption>\r\n            {/*Tercera imagen del grupo del banner*/}\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src=\"https://wallpaperfx.com/view_image/black-and-white-cat-1920x1080-wallpaper-16598.jpg\"\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              <h3>3</h3>\r\n              <p>\r\n                {/*Información de la tercera imagen*/}A diferencia de los\r\n                perros, los gatos no son golosos. Los científicos creen que esto\r\n                se debe a una mutación en un receptor gustativo clave.\r\n              </p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n        <br />\r\n        <StandardImageList />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Login en la cual haremos el inicio de sesion a nuestra cuenta creada en la clase registro\r\n//Contiene una funciones para las asignacion de las imagenes que se muestran el interfaz\r\n//</Resumen>\r\n//<para> En esta clase se encuentra la comprobacion de los datos que se obtuvieron del registro\r\n//para poder ingresar a la sesion, en caso contrario se mandaran mensaje de erorres dependiendo el fallo obtenido\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creacion> 11 de octubre de 2021 </Fecha de creacion>\r\n\r\n//************************Imports********************************\r\nimport * as React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport { useState } from \"react\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\r\nimport BadgeIcon from \"@mui/icons-material/Badge\";\r\n//*****************************************************************\r\n\r\n//Funcion principal en la cual se analizan los datos de incio y\r\n//se verifica si son correctos.\r\nexport default function Login(props) {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  let esValido = usuario === \"\" || password === \"\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n        <CssBaseline />\r\n        {/*Asignación de la imagen que se muestra en el interfaz junto con el tamaño de esta*/}\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage:\r\n              \"url(https://www.elsiglodetorreon.com.mx/m/i/2019/10/1235546.jpeg)\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === \"light\"\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Iniciar sesión\r\n            </Typography>\r\n            <Box\r\n              component=\"form\"\r\n              noValidate\r\n              onSubmit={props.login}\r\n              sx={{ mt: 1 }}\r\n            >\r\n              {/*Creación del campo de texto donde se ingresa el nombre de usuario*/}\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Nombre de usuario\"\r\n                name=\"username\"\r\n                autoFocus\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <BadgeIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  //Comprueba si la contraseña es correcta\r\n                  setUsuario(e.target.value);\r\n                }}\r\n              />\r\n              {/*Creacion del campo de texto donde se ingresa la contraseña*/}\r\n              <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <VpnKeyIcon />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                onChange={(e) => {\r\n                  //Comprueba si la contraseña es correcta\r\n                  setPassword(e.target.value);\r\n                }}\r\n              />\r\n              {/*Si la contraseña o usuario son incorrectos, entonces manda a pantalla un mensaje de error*/}\r\n              {/*Esté mensaje se genera cuando el usuario no pudo ser encontrado*/}\r\n              {props.estatus === 401 ? (\r\n                <Alert severity=\"warning\">\r\n                  <AlertTitle>Alerta</AlertTitle>\r\n                  El nombre de usuario dado no existe.\r\n                </Alert>\r\n              ) : null}\r\n              {/*Esté mensaje se genera cuando el usuario y la contraseña no coinciden*/}\r\n              {props.estatus === 402 ? (\r\n                <Alert severity=\"warning\">\r\n                  <AlertTitle>Alerta</AlertTitle>\r\n                  El nombre de usuario y/o la contraseña no son correctos.\r\n                </Alert>\r\n              ) : null}\r\n              {/*Esté mensaje se genera cuando el usuario y la contraseña son correctos*/}\r\n              {props.estatus === 200 ? (\r\n                <Alert severity=\"success\">\r\n                  <AlertTitle>Éxito</AlertTitle>\r\n                  Ingresando...\r\n                </Alert>\r\n              ) : null}\r\n              {/*Si el error no es ninguno de los anteriores, entonces se imprime a pantalla un mensaje*/}\r\n              {/*en el cuál no se pudo hacer el proceso de solicitud*/}\r\n              {props.estatus !== 0 &&\r\n              props.estatus !== 401 &&\r\n              props.estatus !== 402 &&\r\n              props.estatus !== 200 ? (\r\n                <Alert severity=\"warning\">\r\n                  <AlertTitle>Error</AlertTitle>\r\n                  Ocurrió un error al procesar la solicitud.\r\n                </Alert>\r\n              ) : null}\r\n              {/*Se crea el recuardo el cuál guarda los datos para futuros inicios de sesión*/}\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Recuérdame\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                disabled={esValido ? true : false}\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                Iniciar sesión\r\n                {/*Creac+on de los botónes olvide la contraseña y ¿no tienes una cuenta?*/}\r\n              </Button>\r\n              {/*{ingresado ? <Redirect to=\"/\"/> : null}*/}\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  {/*Al darle clic al botón nos dirigira a la clase olvide la contraseña*/}\r\n                  <Link href=\"/olvidopassword\" variant=\"body2\">\r\n                    Olvidé la contraseña\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/*Al darle clic al botón nos dirigira a la clase de regsitro*/}\r\n                  <Link href=\"/registro\" variant=\"body2\">\r\n                    {\"¿No tienes una cuenta?\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//imports  de la seccion\r\nimport Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport AssignmentIndIcon from \"@mui/icons-material/AssignmentInd\";\r\nimport BadgeIcon from \"@mui/icons-material/Badge\";\r\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\r\n\r\n//Funcion por default en la seccion\r\nexport default function Registro() {\r\n  //Estados para los datos necesarios en el registro\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [apellido, setApellido] = useState(\"\");\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [estatus, setEstatus] = useState(0);\r\n  let [estatusCheckbox, setEstatusCheckbox] = useState(false);\r\n  //Validaciones para evitar nombres cortos de uno o dos caracteres y crear contraseñas con caracteres seguros\r\n  let esInvalidoNombre = nombre.length < 3 || nombre.length > 253;\r\n  let esInvalidoApellido = apellido.length < 3 || apellido.length > 253;\r\n  let esInvalidoUsuario = usuario.length < 6 || usuario.length > 253;\r\n  let esInvalidoPassword = password.length < 6 || password.length > 253;\r\n\r\n  Axios.defaults.withCredentials = true;\r\n  //Creacion  para obtener datos del forumlario\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const data = new FormData(event.currentTarget);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/usuarios/registro\",\r\n      {\r\n        username: data.get(\"username\"),\r\n        firstName: data.get(\"firstName\"), //Llamamos a la api y enviamos sus datos hacia la base de datos\r\n        lastName: data.get(\"lastName\"),\r\n        password: data.get(\"password\"),\r\n      },\r\n      { headers }\r\n    )\r\n      .then(function (response) {\r\n        setEstatus(response.status);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setEstatus(error.response.status);\r\n      });\r\n  };\r\n  //Funcion para confirmar registro\r\n  const enviarRegistro = () => {};\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        {/*imagen de candado  */}\r\n        <Box\r\n          sx={{\r\n            //Centramos la imagen y texto\r\n            marginTop: 8,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n            <LockOutlinedIcon />\r\n            {/*Colocar icono */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Registrarse\r\n          </Typography>\r\n          {/*Campos del formulario */}\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            onSubmit={handleSubmit}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField //Nombres\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  error={nombre.length < 3 || nombre.length > 253}\r\n                  helperText=\"El nombre debe tener por lo menos 3 caracteres.\"\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Nombre\"\r\n                  autoFocus\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AssignmentIndIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setNombre(e.target.value);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField //Campo apellidos\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Apellido\"\r\n                  name=\"lastName\"\r\n                  error={apellido.length < 3 || apellido.length > 253}\r\n                  helperText=\"El apellido debe tener por lo menos 3 caracteres.\"\r\n                  autoComplete=\"lname\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <AssignmentIndIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setApellido(e.target.value);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField //nombre de usuario obligatorio\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Nombre de usuario\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\" //Validacion para que sea de 6 caracteres o mas\r\n                  error={usuario.length < 6 || usuario.length > 253}\r\n                  helperText=\"El nombre de usuario debe tener por lo menos 6 caracteres.\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <BadgeIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setUsuario(e.target.value);\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField //contraseña, igualmente es obligatoria\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Contraseña\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  error={password.length < 6 || password.length > 253}\r\n                  helperText=\"La contraseña debe tener por lo menos 6 caracteres.\"\r\n                  autoComplete=\"new-password\"\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <VpnKeyIcon />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                />\r\n                <br />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {\" \"}\r\n                {/*Control de errores */}\r\n                {estatus === 401 ? (\r\n                  <Alert severity=\"warning\">\r\n                    <AlertTitle>Alerta</AlertTitle>\r\n                    El nombre de usuario dado ya existe.\r\n                  </Alert>\r\n                ) : null}\r\n                {estatus !== 0 &&\r\n                estatus !== 401 &&\r\n                estatus !== 200 &&\r\n                estatus !== 402 ? (\r\n                  <Alert severity=\"error\">\r\n                    <AlertTitle>Error</AlertTitle>\r\n                    Ocurrió un error al procesar la solicitud.\r\n                  </Alert>\r\n                ) : null}\r\n                {/*el registro fue realizado con exito */}\r\n                {estatus === 200 ? (\r\n                  <Alert severity=\"success\">\r\n                    <AlertTitle>Éxito</AlertTitle>\r\n                    Usuario registrado con éxito.\r\n                  </Alert>\r\n                ) : null}\r\n                {/*Formulario con campos vacios */}\r\n                {estatus === 402 ? (\r\n                  <Alert severity=\"warning\">\r\n                    <AlertTitle>Éxito</AlertTitle>\r\n                    Por favor llene todos los campos requeridos.\r\n                  </Alert>\r\n                ) : null}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControlLabel //Checbox confirmacion contrato\r\n                  control={\r\n                    <Checkbox\r\n                      value=\"allowExtraEmails\"\r\n                      color=\"primary\"\r\n                      onChange={(e) => {\r\n                        setEstatusCheckbox(e.target.checked);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Confirmo que he leído y acepto los términos y condiciones y la política de privacidad.\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button //Boton para confirmar el registro\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              disabled={\r\n                esInvalidoNombre ||\r\n                esInvalidoApellido ||\r\n                esInvalidoUsuario ||\r\n                esInvalidoPassword ||\r\n                estatusCheckbox === false\r\n              }\r\n              onClick={enviarRegistro}\r\n            >\r\n              Crear cuenta\r\n            </Button>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                {\" \"}\r\n                {/*Boton para acceder al inicio de sesion */}\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                  Acceder\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Pie en la cual se muestra el pie de la página principal\r\n//Contiene la función Copyright, footers, rutasDiccionario y la principal para\r\n//realizar lo mencionado\r\n//</Resumen>\r\n//<Para> En esta clase se muestra la estructura del pie de página.\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 12 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport * as React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\n//Función para mostrar que la app es de uso exclusivo por OmegaWare\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://kittenbook.software/\">\r\n        OmegaWare\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n//Función para mostrar la parte inferior de la estructura web\r\nconst footers = [\r\n  {\r\n    title: \"Compañía\",\r\n    description: [\"Equipo\", \"Acerca de\", \"Contacto\", \"Ubicaciones\"],\r\n  },\r\n  {\r\n    title: \"Kittenbook\",\r\n    description: [\"¿Qué es?\", \"Precios\"],\r\n  },\r\n  {\r\n    title: \"Legal\",\r\n    description: [\"Política de privacidad\", \"Términos de uso\"],\r\n  },\r\n];\r\n\r\n//Función para incluir las rutas de navegación del pie de página\r\nconst rutasDiccionario = {\r\n  Equipo: \"/equipo\",\r\n  \"Acerca de\": \"/acercade\",\r\n  Contacto: \"/contacto\",\r\n  Ubicaciones: \"/ubicaciones\",\r\n  \"¿Qué es?\": \"/producto\",\r\n  Precios: \"/precios\",\r\n  \"Política de privacidad\": \"/politicaprivacidad\",\r\n  \"Términos de uso\": \"/tos\",\r\n};\r\n\r\n//Función principal para mostrar el pie de página con todo su contenido\r\nexport default function Pie() {\r\n  return (\r\n    <React.Fragment>\r\n      <Container //Formato para el contenedor de la parte inferior de la estructura\r\n        maxWidth=\"md\"\r\n        component=\"footer\"\r\n        sx={{\r\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\r\n          mt: 8,\r\n          py: [3, 6],\r\n        }}\r\n      >\r\n        <Grid container spacing={4} justifyContent=\"space-evenly\">\r\n          {footers.map(\r\n            (\r\n              footer //Formato del grid para el contenido del pie de página\r\n            ) => (\r\n              <Grid item xs={6} sm={3} key={footer.title}>\r\n                <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\r\n                  {footer.title}\r\n                </Typography>\r\n                <ul>\r\n                  {footer.description.map((item) => (\r\n                    <li key={item}>\r\n                      <Link //formato para las rutas de dirrección\r\n                        href={rutasDiccionario[item]}\r\n                        variant=\"subtitle1\"\r\n                        color=\"text.secondary\"\r\n                        underline={\"none\"}\r\n                      >\r\n                        {item}\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Grid>\r\n            )\r\n          )}\r\n        </Grid>\r\n        <Copyright sx={{ mt: 5 }} />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// Imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n// Función que exporta la clase\r\nexport default function Dashboard(props) {\r\n  return (\r\n    // Contenedor\r\n    <Container maxWidth=\"md\">\r\n      <br />\r\n      <br />\r\n      {/* Mensaje de bienvenida al usuario */}\r\n      <h2 style={{ textAlign: \"center\" }}>¡Bienvenid@, {props.username}!</h2>\r\n      <br />\r\n      {/* Un gif */}\r\n      <img\r\n        style={{\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          width: \"50%\",\r\n        }}\r\n        alt={\"Un gato.\"}\r\n        src={\"http://media1.giphy.com/media/c54YHGDH63jJC/giphy.gif\"}\r\n      />\r\n      <br />\r\n      <br />\r\n      {/* Componentes de ayuda de cada sección de la pagina */}\r\n      <h4>¿Cómo usar esta plataforma?</h4>\r\n      <p>\r\n        Kittenbook es una plataforma destinada al estudiante universitario. Como\r\n        tal, te ayuda a organizarte en tu día a día.\r\n      </p>\r\n      <ul type=\"square\">\r\n        <li>\r\n          <b>Notas</b> te ayuda a tomar notas rápidas o recordatorios que no\r\n          quieras olvidar.\r\n        </li>\r\n        <li>\r\n          <b>Horario</b> te ayuda a administrar tu agenda diaria, llevando\r\n          cuenta de tu carga académica.{\" \"}\r\n          <i>\r\n            Sólo puedes añadir materias que estés cursando actualmente a tu\r\n            horario.\r\n          </i>\r\n        </li>\r\n        <li>\r\n          <b>Tareas</b> te ayuda a administrar tus deberes o trabajos asignados.{\" \"}\r\n          <i>\r\n            Sólo puedes añadir tareas a materias que estés cursando y que estén\r\n            registradas en tu horario.\r\n          </i>\r\n        </li>\r\n        <li>\r\n          <b>Retícula</b> te ayuda a administrar tu historial académico,\r\n          llevando cuenta de tu promedio y de los créditos que tengas\r\n          completados.\r\n        </li>\r\n      </ul>\r\n    </Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bookishDark.71924e74.png\";","// Imports utilizados por esta clase\r\nimport * as React from \"react\";\r\nimport logo from \"../bookish.png\";\r\nimport logoDark from \"../bookishDark.png\";\r\nimport \"./image.css\";\r\nimport Container from \"@mui/material/Container\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Link from \"@mui/material/Link\";\r\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// Función que exporta la clase\r\nexport default function MenuAppBar(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\r\n      />\r\n      <CssBaseline />\r\n\r\n      {/* Componente AppBar */}\r\n      <AppBar\r\n        position=\"sticky\"\r\n        color=\"default\"\r\n        elevation={0}\r\n        sx={{ borderBottom: (theme) => `2px solid ${theme.palette.divider}` }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          {/* Barra de herramientas */}\r\n          <Toolbar sx={{ flexWrap: \"wrap\" }}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"inherit\"\r\n              width=\"60%\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              {/* Logo y link a la pagina de inicio */}\r\n              <Link\r\n                color=\"#125394\"\r\n                href=\"/\"\r\n                sx={{ my: 1, mx: 1.5 }}\r\n                underline=\"none\"\r\n              >\r\n                {!props.dark ? (\r\n                  <img\r\n                    alt={\"Un gato.\"}\r\n                    src={logoDark}\r\n                    style={{\r\n                      width: \"45%\",\r\n                      float: \"initial\",\r\n                      className: \"unselectable\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    alt={\"Un gato.\"}\r\n                    src={logo}\r\n                    style={{\r\n                      width: \"45%\",\r\n                      float: \"initial\",\r\n                      className: \"unselectable\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </Typography>\r\n            {props.dark ? (\r\n              <div>\r\n                {/* Botón para iniciar sesión modo oscuro */}\r\n                <Button\r\n                  href=\"/login\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    my: 1,\r\n                    mx: 1.5,\r\n                    borderColor: \"#000000\",\r\n                    color: \"black\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#000000\",\r\n                      borderColor: \"#000000\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Iniciar sesión\r\n                </Button>\r\n                {/* Botón para registrar usuario modo oscuro */}\r\n                <Button\r\n                  href=\"/registro\"\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    my: 1,\r\n                    mx: 1.5,\r\n                    backgroundColor: \"#141414\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#FFFFFF\",\r\n                      borderColor: \"#FFFFFF\",\r\n                      color: \"black\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Registro\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                {/* Botón para registrar usuario modo claro */}\r\n                <Button\r\n                  href=\"/login\"\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    my: 1,\r\n                    mx: 1.5,\r\n                    borderColor: \"#FFFFFF\",\r\n                    color: \"#FFFFFF\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#FFFFFF\",\r\n                      borderColor: \"#FFFFFF\",\r\n                      color: \"black\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Iniciar sesión\r\n                </Button>\r\n                {/* Botón para registrar usuario modo claro */}\r\n                <Button\r\n                  href=\"/registro\"\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    my: 1,\r\n                    mx: 1.5,\r\n                    backgroundColor: \"#FFFFFF\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"#000000\",\r\n                      borderColor: \"#000000\",\r\n                      color: \"white\",\r\n                    },\r\n                  }}\r\n                >\r\n                  Registro\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","// Imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport logo from \"../bookish.png\";\r\nimport logoDark from \"../bookishDark.png\";\r\nimport \"./image.css\";\r\nimport Container from \"@mui/material/Container\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Link from \"@mui/material/Link\";\r\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\n// Función que exporta la clase\r\nexport default function MenuAppBarLogeado(props) {\r\n  // Estado original del menú\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // Función para abrir el menú\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  // Función para cerrar el menú\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles\r\n        styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\r\n      />\r\n      <CssBaseline />\r\n      {/* Componente AppBar */}\r\n      <AppBar\r\n        position=\"sticky\"\r\n        color=\"default\"\r\n        elevation={0}\r\n        sx={{ borderBottom: (theme) => `2px solid ${theme.palette.divider}` }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          {/* Barra de herramientas */}\r\n          <Toolbar sx={{ flexWrap: \"wrap\" }}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"inherit\"\r\n              width=\"60%\"\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              {/* Logo y link a la página de inicio */}\r\n              <Link\r\n                color=\"#125394\"\r\n                href=\"/\"\r\n                sx={{ my: 1, mx: 1.5 }}\r\n                underline=\"none\"\r\n              >\r\n                {!props.dark ? (\r\n                  <img\r\n                    alt={\"Un gato.\"}\r\n                    src={logoDark}\r\n                    style={{\r\n                      width: \"31%\",\r\n                      float: \"initial\",\r\n                      className: \"unselectable\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    alt={\"Un gato.\"}\r\n                    src={logo}\r\n                    style={{\r\n                      width: \"33%\",\r\n                      float: \"initial\",\r\n                      className: \"unselectable\",\r\n                    }}\r\n                  />\r\n                )}\r\n              </Link>\r\n            </Typography>\r\n            <div>\r\n              {/* Boton que abre un menú de acciones del usuario */}\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              {/* Menú */}\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                {/* Datos del usuario */}\r\n                <MenuItem divider={true}>{props.username}</MenuItem>\r\n                {/* Botón para cerrar la sesión */}\r\n                <MenuItem\r\n                  onClick={() => {\r\n                    props.handleLogout();\r\n                    props.logout();\r\n                  }}\r\n                >\r\n                  Cerrar sesión\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase Precios en la cual se muestra información de los precios de la app\r\n//Contiene la función tiers, Precios y la función principal en lo que se realiza lo mencionado\r\n//</Resumen>\r\n//<Para> En esta clase se encuentra información de los precios para adquirir\r\n//la aplicación kittenbook\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 15 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport * as React from \"react\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport StarIcon from \"@mui/icons-material/StarBorder\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n//función para mostrar la información de cada paquete de precios\r\nconst tiers = [\r\n  {\r\n    //información del paquete gratis\r\n    title: \"Gatito negro\",\r\n    price: \"0\",\r\n    description: [\r\n      \"Productividad básica\",\r\n      \"Caja de arena\",\r\n      \"Leche diaria\",\r\n      \"Estambre incluido\",\r\n    ],\r\n    buttonText: \"Elegir\",\r\n    buttonVariant: \"outlined\",\r\n  },\r\n  {\r\n    //información del paquete normal\r\n    title: \"Gato negro\",\r\n    subheader: \"Sugerido\",\r\n    price: \"111\",\r\n    description: [\r\n      \"Productividad moderada\",\r\n      \"Salidas permitidas\",\r\n      \"Ratones incluidos\",\r\n      \"Árbol propio\",\r\n    ],\r\n    buttonText: \"Elegir\",\r\n    buttonVariant: \"contained\",\r\n  },\r\n  {\r\n    //información del paquete especial con todas las funcionalidades\r\n    title: \"Pantera negra\",\r\n    price: \"279\",\r\n    description: [\r\n      \"Productividad máxima\",\r\n      \"Sardinas semanales\",\r\n      \"Contacto con otras camadas\",\r\n      \"Sabana propia\",\r\n    ],\r\n    buttonText: \"Contáctanos\",\r\n    buttonVariant: \"outlined\",\r\n  },\r\n];\r\n\r\n//función para mostrar la información estructurada por paquete de precios\r\nfunction Precios() {\r\n  return (\r\n    <React.Fragment>\r\n      <GlobalStyles //formato de estilo grobal para el contenido\r\n        styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\r\n      />\r\n      <CssBaseline />\r\n      {/* Espaciado entre contenido de paquetes */}\r\n      <Container\r\n        disableGutters\r\n        maxWidth=\"sm\"\r\n        component=\"main\"\r\n        sx={{ pt: 8, pb: 6 }}\r\n      >\r\n        <Typography //formato para la tipografía de la palabra \"Precios\"\r\n          component=\"h1\"\r\n          variant=\"h2\"\r\n          align=\"center\"\r\n          color=\"text.primary\"\r\n          gutterBottom\r\n        >\r\n          Precios\r\n        </Typography>\r\n        <Typography //formato para la tipografía de \"Productividad. Aprendizaje. Planificación.\"\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          component=\"p\"\r\n        >\r\n          Productividad. Aprendizaje. Planificación.\r\n        </Typography>\r\n      </Container>\r\n      {/* Espaciado entre contenido de paquetes */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n          {tiers.map((tier) => (\r\n            // formato para el grid y card para el contenido de la información\r\n            <Grid\r\n              item\r\n              key={tier.title}\r\n              xs={12}\r\n              sm={tier.title === \"Enterprise\" ? 12 : 6}\r\n              md={4}\r\n            >\r\n              <Card>\r\n                <CardHeader //formato para las tarjetas del encabezado\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  action={tier.title === \"Pro\" ? <StarIcon /> : null}\r\n                  subheaderTypographyProps={{\r\n                    align: \"center\",\r\n                  }}\r\n                  sx={{\r\n                    backgroundColor: (theme) =>\r\n                      theme.palette.mode === \"light\"\r\n                        ? theme.palette.grey[200]\r\n                        : theme.palette.grey[700],\r\n                  }}\r\n                />\r\n                <CardContent>\r\n                  <Box //formato del Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"baseline\",\r\n                      mb: 2,\r\n                    }}\r\n                  >\r\n                    <Typography //formato de la tipografía\r\n                      component=\"h2\"\r\n                      variant=\"h3\"\r\n                      color=\"text.primary\"\r\n                    >\r\n                      ${tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"text.secondary\">\r\n                      /mes\r\n                    </Typography>\r\n                  </Box>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography //formato para la tipografia de la descripción\r\n                        component=\"li\"\r\n                        variant=\"subtitle1\"\r\n                        align=\"center\"\r\n                        key={line}\r\n                      >\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant={tier.buttonVariant}>\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n//función principal donde se hace la llamada de la función anterior y así mostrar\r\n//la información de los precios de la aplicación kittenbook\r\nexport default function Pricing() {\r\n  return <Precios />;\r\n}\r\n","//<Resumen>\r\n//Clase PoliticaPrivacidad en la cual se agregan la politica de privacidad\r\n//Contiene una sola funcion en la que se realiza lo mencionado\r\n//</Resumen>\r\n//<para> En esta clase se encuentra la informacion legal en cuanto a las politicas y privacidad\r\n//de la empresa\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creacion> 11 de octubre de 2021 </Fecha de creacion>\r\n\r\n//*******Imports********************************\r\nimport React from \"react\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\n//**********************************************\r\n\r\n//Funcion principal en la que se encuentra la infromacion de\r\n//las politicas y privacidad.\r\nexport default function PoliticaPrivacidad() {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div>\r\n        <br />\r\n        <h3 align=\"center\">Política de privacidad del servicio</h3>\r\n        <br />\r\n        <p>Última actualización: (12/10/2021)</p>\r\n        <p>\r\n          OmegaWare (\"nosotros\", \"nos\" o \"nuestro\") opera{\" \"}\r\n          <a href=\"https://kittenbook.software\"> https://kittenbook.software</a>{\" \"}\r\n          (el \"Sitio\"). Esta página le informa de nuestras políticas relativas a\r\n          la recopilación, el uso y la divulgación de la información personal\r\n          que recibimos de los usuarios del Sitio.\r\n        </p>\r\n        <p>\r\n          Utilizamos su información personal únicamente para proporcionar y\r\n          mejorar el sitio. Al utilizar el Sitio, usted acepta la recopilación y\r\n          el uso de la información de acuerdo con esta política.{\" \"}\r\n        </p>{\" \"}\r\n        <br />\r\n        <h5>Recogida y uso de la información</h5>\r\n        <p>\r\n          {\" \"}\r\n          Al utilizar nuestro Sitio, es posible que le pidamos que nos\r\n          proporcione cierta información de identificación personal que pueda\r\n          utilizarse para ponerse en contacto con usted o identificarle. La\r\n          información personal identificable puede incluir, pero no se limita a\r\n          su nombre (\"Información Personal\").{\" \"}\r\n        </p>{\" \"}\r\n        <br />\r\n        <h5>Datos de registro</h5>\r\n        <p>\r\n          Al igual que muchos operadores de sitios web, recogemos la información\r\n          que su navegador envía cada vez que visita nuestro sitio (\"Datos de\r\n          registro\").{\" \"}\r\n        </p>\r\n        <p>\r\n          Estos datos de registro pueden incluir información como la dirección\r\n          del Protocolo de Internet (\"IP\") de su ordenador, el tipo de\r\n          navegador, la versión del navegador, las páginas de nuestro sitio que\r\n          visita, la hora y la fecha de su visita, el tiempo que pasa en esas\r\n          páginas y otras estadísticas.{\" \"}\r\n        </p>\r\n        <p>\r\n          Además, podemos utilizar servicios de terceros, como Google Analytics,\r\n          que recogen, supervisan y analizan esta información.\r\n        </p>\r\n        <br />\r\n        <h5>Comunicaciones</h5>\r\n        <p>\r\n          Podemos utilizar sus datos personales para ponernos en contacto con\r\n          usted con boletines informativos, material de marketing o promocional\r\n          y otra información que le pueda interesar.\r\n        </p>\r\n        <br />\r\n        <h5>Cookies</h5>\r\n        <p>\r\n          Las cookies son archivos con una pequeña cantidad de datos, que pueden\r\n          incluir un identificador único anónimo. Las cookies se envían a su\r\n          navegador desde un sitio web y se almacenan en el disco duro de su\r\n          ordenador. Al igual que muchos sitios, utilizamos \"cookies\" para\r\n          recopilar información. Usted puede indicar a su navegador que rechace\r\n          todas las cookies o que le indique cuándo se envía una cookie. Sin\r\n          embargo, si no acepta las cookies, es posible que no pueda utilizar\r\n          algunas partes de nuestro Sitio.\r\n        </p>\r\n        <br />\r\n        <h5>Seguridad</h5>\r\n        <p>\r\n          La seguridad de su información personal es importante para nosotros,\r\n          pero recuerde que ningún método de transmisión por Internet o de\r\n          almacenamiento electrónico es 100% seguro. Aunque nos esforzamos por\r\n          utilizar medios comercialmente aceptables para proteger su Información\r\n          Personal, no podemos garantizar su absoluta seguridad.\r\n        </p>\r\n        <br />\r\n        <h5>Cambios a esta política de privacidad</h5>\r\n        <p>\r\n          Esta Política de Privacidad es efectiva a partir de (12/10/2021) y\r\n          permanecerá en vigor excepto en lo que respecta a cualquier cambio en\r\n          sus disposiciones en el futuro, que entrará en vigor inmediatamente\r\n          después de ser publicado en esta página.{\" \"}\r\n        </p>\r\n        <p>\r\n          Nos reservamos el derecho de actualizar o cambiar nuestra Política de\r\n          Privacidad en cualquier momento y usted debe revisar esta Política de\r\n          Privacidad periódicamente. Su uso continuado del Servicio después de\r\n          que publiquemos cualquier modificación de la Política de Privacidad en\r\n          esta página constituirá su reconocimiento de las modificaciones y su\r\n          consentimiento para acatar y estar obligado por la Política de\r\n          Privacidad modificada.{\" \"}\r\n        </p>\r\n        <p>\r\n          Si realizamos algún cambio sustancial en esta Política de Privacidad,\r\n          se lo notificaremos a través de la dirección de correo electrónico que\r\n          nos haya proporcionado o colocando un aviso destacado en nuestro sitio\r\n          web.\r\n        </p>\r\n        <br />\r\n        <h5>Contacto</h5>\r\n        <p>\r\n          Si tiene alguna pregunta sobre esta política de privacidad,{\" \"}\r\n          {/*Nos dirige a la clase de contacto*/}\r\n          <Link href=\"/contacto\" variant=\"body2\">\r\n            póngase en contacto con nosotros.\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase ToS en la cual se definen los termins y condiciones del servicios de la aplicacion\r\n//Contiene una sola funcion en la que se realiza lo mencionado\r\n//</Resumen>\r\n//<para> En esta clase se encuentra la informacion legal en cuanto a los terminos y condiciones\r\n//del servicio de la empresa\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creacion> 11 de octubre de 2021 </Fecha de creacion>\r\n\r\n//*******Imports********************************\r\nimport React from \"react\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\n//**********************************************\r\n\r\n//Funcion principal en la que se encuentra la infromacion de\r\n//los terminos y condiciones del servicio.\r\nexport default function ToS() {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <div>\r\n        <br />\r\n        <h3 align=\"center\">Términos y condiciones del servicio</h3>\r\n        <br />\r\n        {/*Asignacion de las condiciones*/}\r\n        <h5>Qué cubren estas condiciones</h5>\r\n        <p>\r\n          Este sitio web es operado por OmegaWare Inc. En todo el sitio, los\r\n          términos \"nosotros\", \"nos\" y \"nuestro\" se refieren a OmegaWare Inc.\r\n          OmegaWare Inc ofrece este sitio web, incluyendo toda la información,\r\n          herramientas y servicios disponibles en este sitio para usted, el\r\n          usuario, a condición de que acepte todos los términos, condiciones,\r\n          políticas y avisos aquí establecidos.{\" \"}\r\n        </p>\r\n        <p>\r\n          Al visitar nuestro sitio y/o comprar algo de nosotros, usted se\r\n          compromete con nuestro \"Servicio\" y acepta estar obligado por los\r\n          siguientes términos y condiciones (\"Términos de Servicio\",\r\n          \"Términos\"), incluyendo aquellos términos y condiciones adicionales y\r\n          políticas referenciadas aquí y/o disponibles por hipervínculo. Estas\r\n          Condiciones de Servicio se aplican a todos los usuarios del sitio,\r\n          incluyendo, sin limitación, a los usuarios que son navegantes,\r\n          vendedores, clientes, comerciantes y/o contribuyentes de contenido.{\" \"}\r\n        </p>\r\n        <p>\r\n          Le rogamos que lea atentamente estas Condiciones de Servicio antes de\r\n          acceder o utilizar nuestro sitio web. Al acceder o utilizar cualquier\r\n          parte del sitio, usted acepta quedar obligado por estas Condiciones de\r\n          Servicio. Si no está de acuerdo con todos los términos y condiciones\r\n          de este acuerdo, no podrá acceder al sitio web ni utilizar ningún\r\n          servicio. Si estas condiciones de servicio se consideran una oferta,\r\n          su aceptación está expresamente limitada a estas condiciones de\r\n          servicio.{\" \"}\r\n        </p>\r\n        <p>\r\n          Cualquier nueva función o herramienta que se añada a la tienda actual\r\n          también estará sujeta a las Condiciones de Servicio. Puede consultar\r\n          la versión más actualizada de las Condiciones de Servicio en cualquier\r\n          momento en esta página. Nos reservamos el derecho de actualizar,\r\n          cambiar o sustituir cualquier parte de estas Condiciones de Servicio\r\n          publicando actualizaciones y/o cambios en nuestra página web. Es su\r\n          responsabilidad revisar esta página periódicamente para ver si hay\r\n          cambios. Su uso o acceso continuado a la página web tras la\r\n          publicación de cualquier cambio constituye la aceptación de dichos\r\n          cambios.{\" \"}\r\n        </p>\r\n        <p>\r\n          Nuestra tienda está alojada en Shopify Inc. Ellos nos proporcionan la\r\n          plataforma de comercio electrónico en línea que nos permite vender\r\n          nuestros productos y servicios a usted.\r\n        </p>\r\n        <br />\r\n        {/*Terminos y condiciones del servicio por secciones*/}\r\n        <h5>SECCIÓN 1 - CONDICIONES DE LA TIENDA ONLINE</h5>\r\n        <p>\r\n          Al aceptar estas Condiciones de Servicio, usted declara que es mayor\r\n          de edad en su estado o provincia de residencia, o que es mayor de edad\r\n          en su estado o provincia de residencia y nos ha dado su consentimiento\r\n          para permitir que cualquiera de sus dependientes menores de edad\r\n          utilice este sitio. No puede utilizar nuestros productos para ningún\r\n          propósito ilegal o no autorizado ni puede, en el uso del Servicio,\r\n          violar ninguna ley en su jurisdicción (incluyendo pero no limitándose\r\n          a las leyes de derechos de autor). No debe transmitir ningún gusano o\r\n          virus ni ningún código de naturaleza destructiva. El incumplimiento o\r\n          la violación de cualquiera de las Condiciones dará lugar a la\r\n          terminación inmediata de sus Servicios.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 2 - CONDICIONES GENERALES</h5>\r\n        <p>\r\n          Nos reservamos el derecho de rechazar el servicio a cualquier persona\r\n          por cualquier motivo y en cualquier momento. Usted entiende que su\r\n          contenido (sin incluir la información de la tarjeta de crédito), puede\r\n          ser transferido sin encriptar e implicar (a) transmisiones a través de\r\n          varias redes; y (b) cambios para ajustarse y adaptarse a los\r\n          requisitos técnicos de las redes o dispositivos de conexión. La\r\n          información de las tarjetas de crédito siempre se encripta durante la\r\n          transferencia a través de las redes.\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          Usted se compromete a no reproducir, duplicar, copiar, vender,\r\n          revender o explotar cualquier parte del Servicio, el uso del Servicio,\r\n          o el acceso al Servicio o cualquier contacto en el sitio web a través\r\n          del cual se proporciona el servicio, sin nuestro permiso expreso por\r\n          escrito.{\" \"}\r\n        </p>\r\n        <p>\r\n          Los títulos utilizados en este acuerdo se incluyen sólo por\r\n          conveniencia y no limitarán o afectarán de otro modo a estos Términos.\r\n        </p>\r\n        <br />\r\n        <h5>\r\n          SECCIÓN 3 - EXACTITUD, INTEGRIDAD Y ACTUALIDAD DE LA INFORMACIÓN\r\n        </h5>\r\n        <p>\r\n          No nos hacemos responsables si la información disponible en este sitio\r\n          no es exacta, completa o actual. El material de este sitio se\r\n          proporciona únicamente con fines informativos y no debe utilizarse\r\n          como única base para tomar decisiones sin consultar fuentes de\r\n          información primarias, más precisas, más completas o más oportunas.\r\n          Cualquier confianza en el material de este sitio es bajo su propio\r\n          riesgo.{\" \"}\r\n        </p>\r\n        <p>\r\n          Este sitio puede contener cierta información histórica. La información\r\n          histórica, necesariamente, no es actual y se proporciona sólo para su\r\n          referencia. Nos reservamos el derecho de modificar el contenido de\r\n          este sitio en cualquier momento, pero no tenemos ninguna obligación de\r\n          actualizar ninguna información en nuestro sitio. Usted acepta que es\r\n          su responsabilidad supervisar los cambios en nuestro sitio.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 4 - MODIFICACIONES AL SERVICIO Y PRECIOS</h5>\r\n        <p>\r\n          Los precios de nuestros productos están sujetos a cambios sin previo\r\n          aviso.{\" \"}\r\n        </p>\r\n        <p>\r\n          Nos reservamos el derecho de modificar o interrumpir en cualquier\r\n          momento el Servicio (o cualquier parte o contenido del mismo) sin\r\n          previo aviso.{\" \"}\r\n        </p>\r\n        <p>\r\n          No seremos responsables ante usted ni ante ningún tercero por\r\n          cualquier modificación, cambio de precio, suspensión o interrupción\r\n          del Servicio.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 5 - PRODUCTOS O SERVICIOS</h5>\r\n        <p>\r\n          Algunos productos o servicios pueden estar disponibles exclusivamente\r\n          en línea a través del sitio web. Estos productos o servicios pueden\r\n          tener cantidades limitadas y están sujetos a devolución o cambio sólo\r\n          de acuerdo con nuestra Política de Devoluciones.{\" \"}\r\n        </p>\r\n        <p>\r\n          Hemos hecho todo lo posible para mostrar con la mayor precisión\r\n          posible los colores y las imágenes de nuestros productos que aparecen\r\n          en la tienda. No podemos garantizar que la visualización de cualquier\r\n          color en el monitor de su ordenador sea exacta.{\" \"}\r\n        </p>\r\n        <p>\r\n          Nos reservamos el derecho, pero no estamos obligados, a limitar las\r\n          ventas de nuestros productos o Servicios a cualquier persona, región\r\n          geográfica o jurisdicción. Podemos ejercer este derecho en función de\r\n          cada caso. Nos reservamos el derecho de limitar las cantidades de\r\n          cualquier producto o servicio que ofrezcamos. Todas las descripciones\r\n          de los productos o los precios de los mismos están sujetos a cambios\r\n          en cualquier momento sin previo aviso, a nuestra entera discreción.\r\n          Nos reservamos el derecho a suspender cualquier producto en cualquier\r\n          momento. Toda oferta de cualquier producto o servicio realizada en\r\n          este sitio es nula donde esté prohibida.{\" \"}\r\n        </p>\r\n        <p>\r\n          No garantizamos que la calidad de cualquier producto, servicio,\r\n          información u otro material comprado u obtenido por usted cumpla con\r\n          sus expectativas, o que se corrija cualquier error en el Servicio.\r\n        </p>\r\n        <br />\r\n        <h5>\r\n          SECCIÓN 6 - EXACTITUD DE LOS DATOS DE FACTURACIÓN Y DE LA CUENTA\r\n        </h5>\r\n        <p>\r\n          Nos reservamos el derecho a rechazar cualquier pedido que nos haga.\r\n          Podemos, a nuestra entera discreción, limitar o cancelar las\r\n          cantidades compradas por persona, por hogar o por pedido. Estas\r\n          restricciones pueden incluir pedidos realizados por o bajo la misma\r\n          cuenta de cliente, la misma tarjeta de crédito, y/o pedidos que\r\n          utilicen la misma dirección de facturación y/o envío. En el caso de\r\n          que hagamos un cambio o cancelemos un pedido, podemos intentar\r\n          notificárselo poniéndonos en contacto con el correo electrónico y/o la\r\n          dirección de facturación/el número de teléfono facilitados en el\r\n          momento de realizar el pedido. Nos reservamos el derecho de limitar o\r\n          prohibir los pedidos que, a nuestro juicio, parezcan realizados por\r\n          comerciantes, revendedores o distribuidores.\r\n        </p>\r\n        <p>\r\n          Usted se compromete a proporcionar información de compra y de cuenta\r\n          actual, completa y precisa para todas las compras realizadas en\r\n          nuestra tienda. Se compromete a actualizar puntualmente su cuenta y\r\n          otros datos, incluida su dirección de correo electrónico y los números\r\n          y fechas de caducidad de las tarjetas de crédito, para que podamos\r\n          completar sus transacciones y ponernos en contacto con usted cuando\r\n          sea necesario.\r\n        </p>\r\n        <p>Para más detalles, consulte nuestra Política de devoluciones.</p>\r\n        <br />\r\n        <h5>\r\n          SECCIÓN 7 - COMENTARIOS DE LOS USUARIOS, OPINIONES Y OTROS ENVÍOS\r\n        </h5>\r\n        <p>\r\n          Si, a petición nuestra, usted envía determinados envíos específicos\r\n          (por ejemplo, participaciones en concursos) o, sin que nosotros se lo\r\n          pidamos, envía ideas creativas, sugerencias, propuestas, planes u\r\n          otros materiales, ya sea en línea, por correo electrónico, por correo\r\n          postal o de otro modo (colectivamente, \"comentarios\"), usted acepta\r\n          que podamos, en cualquier momento y sin restricciones, editar, copiar,\r\n          publicar, distribuir, traducir y utilizar de otro modo en cualquier\r\n          medio los comentarios que nos envíe. No tenemos ni tendremos ninguna\r\n          obligación (1) de mantener la confidencialidad de ningún comentario;\r\n          (2) de pagar una compensación por cualquier comentario; o (3) de\r\n          responder a cualquier comentario. Podemos, pero no tenemos ninguna\r\n          obligación de, controlar, editar o eliminar el contenido que\r\n          determinemos a nuestra entera discreción que es ilegal, ofensivo,\r\n          amenazante, calumnioso, difamatorio, pornográfico, obsceno o de\r\n          cualquier otra manera objetable o que viole la propiedad intelectual\r\n          de cualquier parte o estos Términos de Servicio. Usted acepta que sus\r\n          comentarios no violarán ningún derecho de terceros, incluidos los\r\n          derechos de autor, marca registrada, privacidad, personalidad u otro\r\n          derecho personal o de propiedad. Asimismo, acepta que sus comentarios\r\n          no contendrán material difamatorio o ilegal, abusivo u obsceno, ni\r\n          contendrán ningún virus informático u otro tipo de malware que pueda\r\n          afectar de algún modo al funcionamiento del Servicio o de cualquier\r\n          sitio web relacionado. No puede utilizar una dirección de correo\r\n          electrónico falsa, ni hacerse pasar por otra persona que no sea usted,\r\n          ni engañar de otro modo a nosotros o a terceros en cuanto al origen de\r\n          los comentarios. Usted es el único responsable de los comentarios que\r\n          haga y de su exactitud. No asumimos ninguna responsabilidad por los\r\n          comentarios publicados por usted o por terceros.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 8 - INFORMACIÓN PERSONAL</h5>\r\n        <p>\r\n          El envío de información personal a través de la tienda se rige por\r\n          nuestra Política de Privacidad. Para ver nuestra Política de\r\n          Privacidad.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 9 - ERRORES, INEXACTITUDES Y OMISIONES</h5>\r\n        <p>\r\n          Ocasionalmente puede haber información en nuestro sitio o en el\r\n          Servicio que contenga errores tipográficos, inexactitudes u omisiones\r\n          que puedan estar relacionadas con las descripciones de los productos,\r\n          los precios, las promociones, las ofertas, los gastos de envío de los\r\n          productos, los tiempos de tránsito y la disponibilidad. Nos reservamos\r\n          el derecho de corregir cualquier error, inexactitud u omisión, y de\r\n          cambiar o actualizar la información o cancelar los pedidos si\r\n          cualquier información en el Servicio o en cualquier sitio web\r\n          relacionado es inexacta en cualquier momento sin previo aviso (incluso\r\n          después de haber enviado su pedido).\r\n        </p>\r\n        <p>\r\n          No asumimos ninguna obligación de actualizar, modificar o aclarar la\r\n          información en el Servicio o en cualquier sitio web relacionado,\r\n          incluyendo, sin limitación, la información de precios, excepto cuando\r\n          se requiera por ley. Ninguna fecha de actualización o de puesta al día\r\n          especificada que se aplique en el Servicio o en cualquier sitio web\r\n          relacionado, debe ser tomada como indicación de que toda la\r\n          información en el Servicio o en cualquier sitio web relacionado ha\r\n          sido modificada o actualizada.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 10 - USOS PROHIBIDOS</h5>\r\n        <p>\r\n          Además de otras prohibiciones establecidas en las Condiciones de\r\n          Servicio, se le prohíbe utilizar el sitio o su contenido (a) para\r\n          cualquier propósito ilícito; (b) para solicitar a otros que realicen o\r\n          participen en cualquier acto ilícito; (c) para violar cualquier\r\n          regulación internacional, federal, provincial o estatal, normas, leyes\r\n          u ordenanzas locales; (d) para infringir o violar nuestros derechos de\r\n          propiedad intelectual o los derechos de propiedad intelectual de\r\n          otros; (e) acosar, abusar, insultar, dañar, difamar, calumniar,\r\n          menospreciar, intimidar o discriminar por motivos de género,\r\n          orientación sexual, religión, etnia, raza, edad, origen nacional o\r\n          discapacidad; (f) enviar información falsa o engañosa (g) cargar o\r\n          transmitir virus o cualquier otro tipo de código malicioso que afecte\r\n          o pueda afectar a la funcionalidad o al funcionamiento del Servicio o\r\n          de cualquier sitio web relacionado, de otros sitios web o de Internet;\r\n          (h) recopilar o rastrear la información personal de otros (i) para\r\n          hacer spam, phishing, pharm, pretexto, spider, crawl o scrape; (j)\r\n          para cualquier propósito obsceno o inmoral; o (k) para interferir o\r\n          eludir las características de seguridad del Servicio o de cualquier\r\n          sitio web relacionado, otros sitios web o Internet. Nos reservamos el\r\n          derecho de poner fin a su uso del Servicio o de cualquier sitio web\r\n          relacionado por violar cualquiera de los usos prohibidos.\r\n        </p>\r\n        <br />\r\n        <h5>\r\n          SECCIÓN 11 - RENUNCIA A LAS GARANTÍAS; LIMITACIÓN DE LA\r\n          RESPONSABILIDAD\r\n        </h5>\r\n        <p>\r\n          No garantizamos que el uso de nuestro servicio sea ininterrumpido,\r\n          oportuno, seguro o libre de errores.{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          No garantizamos que los resultados que puedan obtenerse del uso del\r\n          servicio sean precisos o fiables.{\" \"}\r\n        </p>\r\n        <p>\r\n          Usted acepta que, de vez en cuando, podemos retirar el servicio por\r\n          periodos de tiempo indefinidos o cancelar el servicio en cualquier\r\n          momento, sin previo aviso. Usted acepta expresamente que el uso que\r\n          haga del servicio, o la imposibilidad de utilizarlo, será por su\r\n          cuenta y riesgo. El servicio y todos los productos y servicios que se\r\n          le entregan a través del servicio se proporcionan (salvo que nosotros\r\n          lo indiquemos expresamente) \"tal cual\" y \"según disponibilidad\" para\r\n          su uso, sin ninguna representación, garantía o condición de ningún\r\n          tipo, ya sea expresa o implícita, incluidas todas las garantías o\r\n          condiciones implícitas de comerciabilidad, calidad comercial,\r\n          idoneidad para un fin determinado, durabilidad, título y no\r\n          infracción.{\" \"}\r\n        </p>\r\n        <p>\r\n          En ningún caso OmegaWare Inc, nuestros directores, funcionarios,\r\n          empleados, afiliados, agentes, contratistas, pasantes, proveedores,\r\n          proveedores de servicios o licenciantes serán responsables de\r\n          cualquier lesión, pérdida, reclamación o cualquier daño directo,\r\n          indirecto, incidental, punitivo, especial o consecuente de cualquier\r\n          tipo, incluyendo, sin limitación, la pérdida de beneficios, pérdida de\r\n          ingresos, pérdida de ahorros, pérdida de datos, costos de reemplazo, o\r\n          cualquier daño similar, ya sea basado en contrato, agravio (incluyendo\r\n          negligencia), responsabilidad estricta o de otra manera, que se\r\n          deriven del uso que usted haga de cualquiera de los servicios o de los\r\n          productos adquiridos mediante el servicio, o de cualquier otra\r\n          reclamación relacionada de algún modo con el uso que usted haga del\r\n          servicio o de cualquier producto, incluidos, entre otros, los errores\r\n          u omisiones en cualquier contenido, o cualquier pérdida o daño de\r\n          cualquier tipo que se produzca como resultado del uso del servicio o\r\n          de cualquier contenido (o producto) publicado, transmitido o puesto a\r\n          disposición de los usuarios a través del servicio, incluso aunque se\r\n          haya advertido de su posibilidad. Debido a que algunos estados o\r\n          jurisdicciones no permiten la exclusión o la limitación de la\r\n          responsabilidad por daños consecuenciales o incidentales, en dichos\r\n          estados o jurisdicciones, nuestra responsabilidad se limitará al\r\n          máximo permitido por la ley.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 12 - INDEMNIFICAIÓN</h5>\r\n        <p>\r\n          El usuario se compromete a indemnizar, defender y eximir de\r\n          responsabilidad a Omegaware Inc y a nuestra empresa matriz,\r\n          subsidiarias, filiales, socios, funcionarios, directores, agentes,\r\n          contratistas, licenciatarios, proveedores de servicios,\r\n          subcontratistas, proveedores, becarios y empleados, de cualquier\r\n          reclamación o demanda, incluidos los honorarios razonables de los\r\n          abogados, presentada por cualquier tercero debido a, o que surja de,\r\n          el incumplimiento por parte del usuario de estas Condiciones de\r\n          servicio o de los documentos que incorporan por referencia, o la\r\n          violación de cualquier ley o de los derechos de un tercero.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 13 - SEPARABILIDAD</h5>\r\n        <p>\r\n          En el caso de que se determine que alguna disposición de estas\r\n          Condiciones de Servicio es ilegal, nula o inaplicable, dicha\r\n          disposición será, no obstante, ejecutable en la medida en que lo\r\n          permita la legislación aplicable, y la parte inaplicable se\r\n          considerará separada de estas Condiciones de Servicio, sin que dicha\r\n          determinación afecte a la validez y aplicabilidad de las demás\r\n          disposiciones.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 14 - TERMINACIÓN</h5>\r\n        <p>\r\n          Las obligaciones y responsabilidades de las partes incurridas antes de\r\n          la fecha de terminación sobrevivirán a la terminación de este acuerdo\r\n          a todos los efectos.{\" \"}\r\n        </p>\r\n        <p>\r\n          Estas Condiciones de Servicio son efectivas a menos y hasta que sean\r\n          rescindidas por usted o por nosotros. Usted puede rescindir estas\r\n          Condiciones de Servicio en cualquier momento notificándonos que ya no\r\n          desea utilizar nuestros Servicios, o cuando deje de utilizar nuestro\r\n          sitio. Si a nuestro juicio usted no cumple, o sospechamos que ha\r\n          incumplido, cualquier término o disposición de estas Condiciones de\r\n          Servicio, también podremos rescindir este acuerdo en cualquier momento\r\n          sin previo aviso y usted seguirá siendo responsable de todos los\r\n          importes adeudados hasta la fecha de rescisión inclusive; y/o en\r\n          consecuencia podremos denegarle el acceso a nuestros Servicios (o a\r\n          cualquier parte de los mismos).\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 15 - ACUERDO COMPLETO</h5>\r\n        <p>\r\n          El hecho de que no ejerzamos o hagamos valer cualquier derecho o\r\n          disposición de estas Condiciones de Servicio no constituirá una\r\n          renuncia a dicho derecho o disposición. Estas Condiciones del servicio\r\n          y cualquier política o norma de funcionamiento publicada por nosotros\r\n          en este sitio o con respecto al Servicio constituyen el acuerdo y el\r\n          entendimiento completo entre usted y nosotros y rigen su uso del\r\n          Servicio, sustituyendo cualquier acuerdo, comunicación y propuesta\r\n          anterior o contemporánea, ya sea oral o escrita, entre usted y\r\n          nosotros (incluyendo, pero no limitado a, cualquier versión anterior\r\n          de las Condiciones del servicio).{\" \"}\r\n        </p>\r\n        <p>\r\n          Cualquier ambigüedad en la interpretación de estas Condiciones de\r\n          Servicio no se interpretará en contra de la parte que las haya\r\n          redactado.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 16 - LEY APLICABLE</h5>\r\n        <p>\r\n          Estas condiciones de servicio y cualquier otro acuerdo por el que le\r\n          proporcionemos servicios se regirán e interpretarán de acuerdo con las\r\n          leyes de\r\n        </p>\r\n        <p>Blvd. Revolución y, Av. Instituto Tecnológico de La Laguna,</p>\r\n        <p>Primero de Cobián Centro, 27000 Torreón, Coah</p>\r\n        <br />\r\n        <h5>SECCIÓN 17 - CAMBIOS EN LAS CONDICIONES DE SERVICIO</h5>\r\n        <p>\r\n          Puede consultar la versión más actualizada de las Condiciones de\r\n          servicio en cualquier momento en esta página. Nos reservamos el\r\n          derecho, a nuestra entera discreción, de actualizar, cambiar o\r\n          sustituir cualquier parte de estas Condiciones de servicio publicando\r\n          actualizaciones y cambios en nuestro sitio web. Es su responsabilidad\r\n          revisar nuestro sitio web periódicamente para ver si hay cambios. El\r\n          uso continuado o el acceso a nuestro sitio web o al Servicio tras la\r\n          publicación de cualquier cambio en estas Condiciones de Servicio\r\n          constituye la aceptación de dichos cambios.\r\n        </p>\r\n        <br />\r\n        <h5>SECCIÓN 18 - INFORMACIÓN DE CONTACTO</h5>\r\n        <p>Las preguntas sobre las condiciones del servicio deben enviarse a</p>\r\n        <p>Blvd. Revolución y, Av. Instituto Tecnológico de La Laguna,</p>\r\n        <p>Primero de Cobián Centro, 27000 Torreón, Coah</p>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase 404 sirve para cuando no se encuentra una ruta que no esta definida en la clase App aparezca un gif\r\n//</Resumen>\r\n//<Para> Muesta un gif al no encontrar una ruta que no esta definida en la aplicación.\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 15 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\n//Función principal en la cual se contiene un gif en caso de que la inferfaz que se busque no se encuentre.\r\nexport default function Componente404() {\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <br />\r\n      <br />\r\n      <img\r\n        style={{\r\n          //formato de estilo para el gif\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n          width: \"50%\",\r\n        }}\r\n        alt={\"Un gato\"}\r\n        src={\r\n          //dirección de ruta donde se encuentra el gif\r\n          \"https://amazinganimalphotos.com/wp-content/uploads/2014/10/best-slow-mo-video-ever.gif\"\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","//<Resumen>\r\n//Clase App que sirve como la conexión de todas las siguientes clases hacia el sitio, es decir sirve para que existan\r\n//las rutas de cada una de las clases y poder encontrarlas en la aplicación principal\r\n//</Resumen>\r\n//<Para> Sirve como conexión de todas las clases hacia la página web principal para que estas interfaces sean encontradas.\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 10 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport Navegacion from \"./componentes/Navegacion\";\r\nimport OlvidoPassword from \"./componentes/OlvidoPassword\";\r\nimport Ubicaciones from \"./componentes/Ubicaciones\";\r\nimport AcercaDe from \"./componentes/AcercaDe\";\r\nimport Contacto from \"./componentes/Contacto\";\r\nimport Equipo from \"./componentes/Equipo\";\r\nimport Producto from \"./componentes/Producto\";\r\nimport Horario from \"./componentes/Horario\";\r\nimport Notas from \"./componentes/Notas\";\r\nimport Tareas from \"./componentes/Tareas\";\r\nimport Reticula from \"./componentes/Reticula\";\r\nimport Inicio from \"./componentes/Inicio\";\r\nimport Acceso from \"./componentes/Login\";\r\nimport Registro from \"./componentes/Registro\";\r\nimport Pie from \"./componentes/Pie\";\r\nimport Dashboard from \"./componentes/Dashboard\";\r\nimport MenuAppBar from \"./componentes/AppBar\";\r\nimport MenuAppBarLogeado from \"./componentes/AppBarLogeado\";\r\nimport Precios from \"./componentes/Precios\";\r\nimport PoliticaPrivacidad from \"./componentes/PoliticaPrivacidad\";\r\nimport ToS from \"./componentes/ToS\";\r\nimport Componente404 from \"./componentes/404\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useTheme, ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Axios from \"axios\";\r\n\r\n//constante para indicar el modo de color del contexto\r\nconst ColorModeContext = React.createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\n//Función principal que hace el vinculo entre entre la clase principal y las otras que existe, para cuando se busquen\r\n//puedan ser encontradas dentro del sitio web KittenBook\r\nfunction App() {\r\n  const theme = useTheme();\r\n  const colorMode = React.useContext(ColorModeContext);\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  //constantes definidas para el nombre de usuario, la autenticidad,\r\n  //estado de uso y estatus\r\n  const [username, setUsername] = useState(\"\");\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [darkState, setDarkState] = useState(true);\r\n  const [estatus, setEstatus] = useState(0);\r\n\r\n  useEffect(() => {\r\n    //efecto de uso\r\n    Axios.get(\"https://kittenbook.software:3005/api/usuarios/autenticado\")\r\n      .then((res) => {\r\n        if (\r\n          res.data.username !== undefined &&\r\n          res.data.authenticated !== undefined\r\n        ) {\r\n          setUsername(res.data.username); //asignar el nombre de usuario\r\n          setAuthenticated(res.data.authenticated === \"true\" ? true : false); //asignar la autenticidad\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        //encapsular cuando ocurra un error\r\n        console.log(err);\r\n      });\r\n    const existingPreference = localStorage.getItem(\"darkState\");\r\n    if (existingPreference === \"dark\") {\r\n      //condición para cambiar el modo de color de la interfaz a color negro\r\n      colorMode.toggleColorMode();\r\n      setItemLS();\r\n    }\r\n  }, []);\r\n\r\n  //constante para manejar el cierre de sesión\r\n  const handleLogout = () => {\r\n    setAuthenticated(false);\r\n  };\r\n\r\n  //constante para el acceso a la aplicación\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    const data = new FormData(e.currentTarget);\r\n    Axios.post(\r\n      \"https://kittenbook.software:3005/api/usuarios/login\",\r\n      {\r\n        //nombre de usuario y contraseña para acceder a la aplicación\r\n        username: data.get(\"username\"),\r\n        password: data.get(\"password\"),\r\n      },\r\n      { headers }\r\n    )\r\n      .then(function (response) {\r\n        setEstatus(response.status);\r\n        setAuthenticated(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setEstatus(error.response.status);\r\n      });\r\n  };\r\n\r\n  //constante para el cierre de sesión\r\n  const logout = (e) => {\r\n    Axios.get(\"https://kittenbook.software:3005/api/usuarios/logout\")\r\n      .then((res) => {\r\n        console.log(\"Logout successful.\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //constante para manejar el modo de color de la interfaz (negro o blanco)\r\n  const setItemLS = () => {\r\n    setDarkState(!darkState);\r\n    if (darkState) {\r\n      localStorage.setItem(\"darkState\", \"dark\");\r\n    } else {\r\n      localStorage.setItem(\"darkState\", \"light\");\r\n    }\r\n  };\r\n\r\n  //condición para manejar el autenticado de la app\r\n  if (authenticated) {\r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <Box sx={{ mx: \"auto\", width: 55 }}>\r\n            <IconButton //formato de icono del botón\r\n              sx={{ ml: 1 }}\r\n              onClick={() => {\r\n                colorMode.toggleColorMode();\r\n                setItemLS();\r\n              }}\r\n              color=\"inherit\"\r\n              align=\"center\"\r\n            >\r\n              {theme.palette.mode === \"dark\" ? (\r\n                <Brightness7Icon />\r\n              ) : (\r\n                <Brightness4Icon />\r\n              )}\r\n            </IconButton>\r\n          </Box>\r\n        </Container>\r\n        <MenuAppBarLogeado //formato del menu de la barra de aplicaciones logeado\r\n          username={username}\r\n          dark={darkState}\r\n          logout={logout}\r\n          handleLogout={handleLogout}\r\n          position=\"fixed\"\r\n        />\r\n        <Navegacion />\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Inicio} />\r\n            <Route\r\n              exact\r\n              path=\"/inicio\"\r\n              render={(props) => (\r\n                <Dashboard {...props} username={username} theme={theme} />\r\n              )}\r\n            />\r\n            <Route exact path=\"/notas\" component={Notas} />\r\n            <Route exact path=\"/horario\" component={Horario} />\r\n            <Route exact path=\"/tareas\" component={Tareas} />\r\n            <Route exact path=\"/reticula\" component={Reticula} />\r\n            {/*<Route exact path=\"/login\" render={(props) => <Acceso estatus={estatus} login={login}/>}/>*/}\r\n            {/*<Route exact path=\"/registro\" component={Registro}/>*/}\r\n            <Route exact path=\"/precios\" component={Precios} />\r\n            <Route exact path=\"/tos\" component={ToS} />\r\n            <Route\r\n              exact\r\n              path=\"/politicaprivacidad\"\r\n              component={PoliticaPrivacidad}\r\n            />\r\n            <Route exact path=\"/olvidopassword\" component={OlvidoPassword} />\r\n            <Route exact path=\"/contacto\" component={Contacto} />\r\n            <Route exact path=\"/ubicaciones\" component={Ubicaciones} />\r\n            <Route exact path=\"/acercade\" component={AcercaDe} />\r\n            <Route exact path=\"/equipo\" component={Equipo} />\r\n            <Route exact path=\"/producto\" component={Producto} />\r\n            <Route path=\"*\" exact={true} component={Componente404} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n        <Pie />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <Box sx={{ mx: \"auto\", width: 55 }}>\r\n          <IconButton //formato de icono del botón\r\n            sx={{ ml: 1 }}\r\n            onClick={() => {\r\n              colorMode.toggleColorMode();\r\n              setItemLS();\r\n            }}\r\n            color=\"inherit\"\r\n            align=\"center\"\r\n          >\r\n            {theme.palette.mode === \"dark\" ? (\r\n              <Brightness7Icon />\r\n            ) : (\r\n              <Brightness4Icon />\r\n            )}\r\n          </IconButton>\r\n        </Box>\r\n      </Container>\r\n      <MenuAppBar dark={darkState} position=\"fixed\" />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Inicio} />\r\n\r\n          {/* {<Route exact path=\"/inicio\"\r\n                         render={(props) => <Dashboard {...props} username=\"usuario\"/>}/>}\r\n                    {<Route exact path=\"/notas\" component={Notas}/>}\r\n                    {<Route exact path=\"/horario\" component={Horario}/>}\r\n                    {<Route exact path=\"/tareas\" component={Tareas}/>}\r\n                    {<Route exact path=\"/reticula\" component={Reticula}/>*/}\r\n\r\n          <Route //asignar la ruta exacta para acceder a cada apartado\r\n            exact\r\n            path=\"/login\"\r\n            render={(props) => <Acceso estatus={estatus} login={login} />}\r\n          />\r\n          <Route exact path=\"/registro\" component={Registro} />\r\n          <Route exact path=\"/precios\" component={Precios} />\r\n          <Route exact path=\"/tos\" component={ToS} />\r\n          <Route\r\n            exact\r\n            path=\"/politicaprivacidad\"\r\n            component={PoliticaPrivacidad}\r\n          />\r\n          <Route exact path=\"/olvidopassword\" component={OlvidoPassword} />\r\n          <Route exact path=\"/contacto\" component={Contacto} />\r\n          <Route exact path=\"/ubicaciones\" component={Ubicaciones} />\r\n          <Route exact path=\"/acercade\" component={AcercaDe} />\r\n          <Route exact path=\"/equipo\" component={Equipo} />\r\n          <Route exact path=\"/producto\" component={Producto} />\r\n          <Route path=\"*\" exact={true} component={Componente404} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      <Pie />\r\n    </div>\r\n  );\r\n}\r\n\r\n//función para alternar el modo de color de la interfaz\r\nfunction ToggleColorMode() {\r\n  const [mode, setMode] = React.useState(\"light\");\r\n  const colorMode = React.useMemo(\r\n    () => ({\r\n      toggleColorMode: () => {\r\n        setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  //constante para poder usar el modo y paleta de color\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n\r\n//exportar por defecto la función para alternar el modo de color de la interfaz\r\nexport default ToggleColorMode;\r\n","//<Resumen>\r\n//Clase index que ayuda a renderizar la aplicación completa\r\n//</Resumen>\r\n//<Para> Renderizar la aplicación web\r\n//<Autor>Omegaware</Autor>\r\n//<Fecha de creación> 12 de octubre de 2021</Fecha de creación>\r\n\r\n//imports utilizados por esta clase\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ToggleColorMode from \"./App\";\r\n\r\n//función que ayuda a renderizar toda la aplicación web\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToggleColorMode />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\") //se obtiene el elemento por Id\r\n);\r\n"],"sourceRoot":""}